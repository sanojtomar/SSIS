<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/2/2022 6:54:01 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SANOJ-KUMAR"
  DTS:CreatorName="SANOJ-KUMAR\Rita Tomar"
  DTS:DTSID="{B172A76E-30AB-4383-95AC-0F4E9B651A79}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="16393"
  DTS:MaxErrorCount="10"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="46"
  DTS:VersionGUID="{1E6549AF-95A2-43AF-9F07-760839ADBF00}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{45547FFA-610E-4FF7-98A2-3F5A73644C3E}"
      DTS:ObjectName="APIKey"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">WW7ovYVmLWPHWSUR7hTuXTdOX8AxDfS0PLMOWFvZ</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C294E8A5-4156-4275-BD4F-E18984DAF9C4}"
      DTS:ObjectName="APIURL"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://api.sam.gov/opportunities/v2/search</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D7CEBA34-7827-49FA-8289-FB2238DFD3BD}"
      DTS:ObjectName="ConnectionString"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SANOJ-KUMAR\TOMAR;Initial Catalog=sam.gov;User=sa;Password=Office@357</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Invoke API"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Invoke API and get the result back"
      DTS:DTSID="{952A32C3-BE41-4E5C-88D5-180C9E4D8BD1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="10"
      DTS:ObjectName="Invoke API"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4723e78e49584ba59cb27278dad51dfe"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::APIKey,$Package::APIURL,$Package::ConnectionString">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_4723e78e49584ba59cb27278dad51dfe.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4BCE7011-2467-498F-8321-1A1019AEDB58}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4723e78e49584ba59cb27278dad51dfe</RootNamespace>
    <AssemblyName>ST_4723e78e49584ba59cb27278dad51dfe</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\All Files\Learning\SSIS\open.gsa.gov\open.gsa.gov\lib\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Net.Http.Formatting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL" />
    <Reference Include="System.Net.Http.WebRequest" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Settings.get_Default():ST_4723e78e49584ba59cb27278dad51dfe.Properties.Sett" +
    "ings")]

namespace ST_4723e78e49584ba59cb27278dad51dfe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Collections.Generic;
using Newtonsoft.Json;
using ST_4723e78e49584ba59cb27278dad51dfe.SAM.Helpers;
using ST_4723e78e49584ba59cb27278dad51dfe.SAM.Result;
using System.Net;
using System.IO;
using System.Text;
using System.Data.SqlClient;

#endregion

namespace ST_4723e78e49584ba59cb27278dad51dfe
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                //TODO: Uncomment below commented code to connect to API

                string serviceUrl = Dts.Variables["$Package::APIURL"].Value.ToString();
                string APIUrl = string.Format(serviceUrl + "?limit=10&api_key={0}&postedFrom=01/01/2018&postedTo=05/10/2018&title=Driving", Dts.Variables["$Package::APIKey"].Value.ToString());

                WebRequest request = WebRequest.Create(APIUrl);
                request.Method = "GET";
                request.ContentType = "application/json; charset=utf-8";
                request.ContentLength = 0;
                string result = "";
                OpportunityResult data = null;
                using (WebResponse response = request.GetResponse())
                {
                    Stream responseStream = response.GetResponseStream();
                    using (StreamReader streamReader = new StreamReader(responseStream, Encoding.Default))
                    {
                        result = streamReader.ReadToEnd();
                    }

                    data = JsonHelper.ConvertToObject<OpportunityResult>(result);
                    save_the_data(data);


                }


                // TODO: Comment below code to disconnect local file

                //using (StreamReader r = new StreamReader(@"C:\All Files\Learning\SSIS\open.gsa.gov\open.gsa.gov\data\sam.json"))
                //{
                //    string result = r.ReadToEnd();
                //    OpportunityResult data = JsonHelper.ConvertToObject<OpportunityResult>(result);
                //    save_the_data(data);
                //}


                Dts.TaskResult = (int)ScriptResults.Success;

            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        private void save_the_data(OpportunityResult data)
        {
            save_opportunities(data.opportunitiesData);
        }

        private void save_into_db(string storedProcedure, List<SqlParameter> cmdParameters)
        {
            using (SqlConnection con = new SqlConnection(Dts.Variables["$Package::ConnectionString"].Value.ToString()))
            {
                using (SqlCommand cmd = new SqlCommand(storedProcedure, con))
                {
                    cmd.CommandType = CommandType.StoredProcedure;

                    foreach (var param in cmdParameters)
                    {
                        cmd.Parameters.Add(param);
                    }
                    con.Open();
                    cmd.ExecuteNonQuery();
                }
            }
        }

     private void save_opportunities(Opportunitiesdata[] opportunitiesData)
        {
            if(opportunitiesData != null && opportunitiesData.Length >0)
            {
                foreach (var item in opportunitiesData)
                {
                    List<SqlParameter> cmdParameters = new List<SqlParameter>();
                    cmdParameters.Add(new SqlParameter("@noticeId", item.noticeId));
                    cmdParameters.Add(new SqlParameter("@title", (object)item.title ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@solicitationNumber", (object)item.solicitationNumber ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@fullParentPathName", (object)item.fullParentPathName ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@fullParentPathCode", (object)item.fullParentPathCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@postedDate", (object)item.postedDate ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@type", (object)item.type ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@baseType", (object)item.baseType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@archiveType", (object)item.archiveType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@archiveDate", (object)item.archiveDate ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@typeOfSetAsideDescription", (object)item.typeOfSetAsideDescription ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@typeOfSetAside", (object)item.typeOfSetAside ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@responseDeadLine", (object)item.responseDeadLine ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@naicsCode", (object)item.naicsCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@classificationCode", (object)item.classificationCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@active", (object)item.active ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@award", (object)item.award ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@description", (object)item.description ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@organizationType", (object)item.organizationType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@placeOfPerformance", (object)item.placeOfPerformance ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@additionalInfoLink", (object)item.additionalInfoLink ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@uiLink", (object)item.uiLink ?? DBNull.Value));

                    save_into_db("save_opportunities", cmdParameters);


                    if (item.officeAddress != null)
                    {
                        save_office_addess(item.officeAddress, item.noticeId);
                    }

                    if (item.pointOfContact != null && item.pointOfContact.Length > 0)
                    {
                        save_poc(item.pointOfContact, item.noticeId);
                    }

                    if (item.links != null && item.links.Length > 0)
                    {
                        save_links(item.links, item.noticeId);
                    }

                }
            }
        }

        private void save_office_addess(Officeaddress officeAddress, string noticeId)
        {
            List<SqlParameter> cmdParameters = new List<SqlParameter>();
            cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
            cmdParameters.Add(new SqlParameter("@zipcode", (object)officeAddress.zipcode ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@city", (object)officeAddress.city ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@countryCode", (object)officeAddress.countryCode ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@state", (object)officeAddress.state ?? DBNull.Value));
            save_into_db("save_office_address", cmdParameters);
        }

        private void save_poc(Pointofcontact[] pointOfContact, string noticeId)
        {
            foreach (var item in pointOfContact)
            {
                List<SqlParameter> cmdParameters = new List<SqlParameter>();
                cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
                cmdParameters.Add(new SqlParameter("@fax", (object)item.fax ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@type", (object)item.type ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@email", (object)item.email ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@phone", (object)item.phone ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@title", (object)item.title ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@fullName", (object)item.fullName ?? DBNull.Value));

                save_into_db("save_poc", cmdParameters);
            }

        }

        private void save_links(Link[] links, string noticeId)
        {
            foreach (var item in links)
            {
                List<SqlParameter> cmdParameters = new List<SqlParameter>();
                cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
                cmdParameters.Add(new SqlParameter("@type", (object)item.rel ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@link", (object)item.href ?? DBNull.Value));

                save_into_db("save_links", cmdParameters);
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }


    namespace SAM.Helpers
    {
        /// <summary>
        /// JSON serializer
        /// </summary>
        public static class JsonHelper
        {

            /// <summary>
            /// Convert JSON to object
            /// </summary>
            /// <typeparam name="T">JSON</typeparam>
            /// <param name="json"></param>
            /// <returns>Object</returns>
            public static T ConvertToObject<T>(string json) where T : class, new()
            {
                T obj = null;

                if (json != null && json.Length > 0)
                {
                    try
                    {
                        obj = JsonConvert.DeserializeObject<T>(json);
                    }
                    catch
                    {
                        obj = null;
                    }
                }

                return obj;
            }
        }
    }

    namespace SAM.Result
    {
        public class OpportunityResult
        {
            public int totalRecords { get; set; }
            public int limit { get; set; }
            public int offset { get; set; }
            public Opportunitiesdata[] opportunitiesData { get; set; }
            public SearchLink[] links { get; set; }
        }

        public class Opportunitiesdata
        {
            public string noticeId { get; set; }
            public string title { get; set; }
            public string solicitationNumber { get; set; }
            public string fullParentPathName { get; set; }
            public string fullParentPathCode { get; set; }
            public string postedDate { get; set; }
            public string type { get; set; }
            public string baseType { get; set; }
            public string archiveType { get; set; }
            public object archiveDate { get; set; }
            public object typeOfSetAsideDescription { get; set; }
            public object typeOfSetAside { get; set; }
            public DateTime responseDeadLine { get; set; }
            public string naicsCode { get; set; }
            public string classificationCode { get; set; }
            public string active { get; set; }
            public object award { get; set; }
            public Pointofcontact[] pointOfContact { get; set; }
            public string description { get; set; }
            public string organizationType { get; set; }
            public Officeaddress officeAddress { get; set; }
            public object placeOfPerformance { get; set; }
            public object additionalInfoLink { get; set; }
            public string uiLink { get; set; }
            public Link[] links { get; set; }
            public string[] resourceLinks { get; set; }
        }

        public class Officeaddress
        {
            public string zipcode { get; set; }
            public string city { get; set; }
            public string countryCode { get; set; }
            public string state { get; set; }
        }

        public class Pointofcontact
        {
            public object fax { get; set; }
            public string type { get; set; }
            public string email { get; set; }
            public string phone { get; set; }
            public object title { get; set; }
            public string fullName { get; set; }
        }

        public class Link
        {
            public string rel { get; set; }
            public string href { get; set; }
        }

        public class SearchLink
        {
            public string rel { get; set; }
            public string href { get; set; }
        }

    }

}]]></ProjectItem>
          <ProjectItem
            Name="app.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4723e78e49584ba59cb27278dad51dfe</msb:CodeName>
		<msb:DisplayName>ST_4723e78e49584ba59cb27278dad51dfe</msb:DisplayName>
		<msb:ProjectId>{A0C7C505-794D-41C6-B2F9-C44BD564D440}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4723e78e49584ba59cb27278dad51dfe.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="app.config"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="05f4e672f78f4f10a283b468c880e7a2">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>145</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="c63414ded7a04e2cbb5d69046db0cec6">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>142</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="5a33286a32d44ebf9c2b3211ed132ca0">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>264</msb:LineNumber>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="33ae4d5389f44b6bbf234acf72534cb9">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>234</msb:LineNumber>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="1aa36fb82cdf4d61abdc7a98d3d20ea0">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>168</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="f621f0b40a70471d83867f529a4e5896">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>204</msb:LineNumber>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="8128ac37b13d44a4aa66b581927d7de8">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>250</msb:LineNumber>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4723e78e49584ba59cb27278dad51dfe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4723e78e49584ba59cb27278dad51dfe")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4723e78e49584ba59cb27278dad51dfe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4723e78e49584ba59cb27278dad51dfe.dll">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
VwqkDgYA5gqkDgYAowlvDg8AGA8AAAYA0AkEDQYAOgoEDQYAGwoEDQYAzQoEDQYAdwoEDQYAkAoE
DQYA5wkEDQYAAgpFCwoAqwrzCwoAqQjzCw4A3QjYEAYAEA4RAAYASA2yDAYAAQCyABIARw5pERIA
Og1pERIAdQVpEUsAVw4AAAYAuQyyDAYA0RCyDAYAawmkDgYAbAeyDAYAhglvDgYALA7EDgYA1g3v
DA4AQgkuDA4AtwkuDA4AxQjaDAoAHAzzCxYAbQ91BxYA1wZ1BwYAYQuyDA4AlxHYEAYAogwRAAYA
PAurEQYAHQ4RAAYA4AayDBIAawWuDRIA1wdEABIAFg1pERIALQ2uDQYAkAyyDBoAixHBDQYAUgiy
DAYA7AayDAYAyxEEDQAAAAAIAAAAAAABAAEAAQAQAM8MswY5AAEAAQABABAAVxEZEWEAAQAJAAEA
EACKABkRYQAGABQAAQAQAE8QGRFhACAASQABABAApxAZEWEAJABSAAEAEADPCxkRYQAqAF8AAQAQ
AIULGRFhACwAZACBARAAPA7DD2EALgBpAAAAEADLDjoPYQAuAGoAAAEQAHcPOg+BADAAbgADAQAA
ZRAAAF0AMQBxAAEAdARdAQEAHwVdAQEABwVdAQEA9ABgAQEAsQRlAQEAFwFqAQEAJQJqAQEAUARq
AQEAPAJqAQEAjAFqAQEAIgNqAQEADANqAQEAswJqAQEAzQJqAQEAPgNtAQEACARtAQEAbAFtAQEA
egJwAQEA1AFqAQEAsAFqAQEAcgNqAQEAMQFtAQEA5wR0AQEAMwRqAQEA6gJqAQEAyAR5AQEASAFt
AQEAuANtAQEAoANqAQEAsQR9AQEAkgSCAQEADAJqAQEASwVqAQEA7wFqAQEAWwNqAQEANgVtAQEA
DANqAQEA8QNqAQEAnAJqAQEAJQJtAQEAYAJqAQEA3ANqAQEAigNqAQEA3ANqAQEAigNqAREAvgyG
AREAmQiKAREAzQWOAQYGPABdAVaAEBCSAVaAeQiSAVAgAAAAAIYA1QwGAAEAYCEAAAAAgQB8AJYB
AQBwIQAAAACBAJwAnAECADQiAAAAAIEAJw+nAQQAgCUAAAAAgQAYEK4BBQAsJgAAAACBAM0AtQEH
ADAnAAAAAIEApA+9AQkAsicAAAAAhhhiDgYACwC6JwAAAACGCIIOwgALAMInAAAAAIYIkw4BAAsA
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
WQBiDhAAYQBiDhAAaQBiDgYAyQBiDgYA2QBiDgYA+QBiDhUAcQBdECUACQFpDysAEQGpDDEAGQEE
CzgAwQBfCzwAIQFzEEAAIQF6EEYAKQE7CUwAKQGABRAAKQFHCBAAKQFzC1MAKQHpCFgAeQCXDF0A
OQENEWMAgQBiDmkAQQFhBTwASQH1CAYACQFIEQEAoQBiDhAAqQBiDocAUQHTB44ADABUDpwAFAB/
EawAqQDzD7EAYQHwALcAFACiEb4AaQHKDAYAUQHUEcIADABiDgYAmQBiDtUADADwANsAcQEIC+EA
cQBiDgYAwQBiDgYAIQFoC8IAeQG2EBUBgQH+BiEBgQHHESoB4QBiDjABAQFiDgYACADIAFMBCADM
AFgBIQBrAFgBLgALAHMCLgATAHwCLgAbAJsCLgAjAKQCLgArAM0CLgAzAM0CLgA7AM0CLgBDAKQC
LgBLANMCLgBTAM0CLgBbAOoCQQBrAFgBQwBjAFgBYQBrAFgBgQBrAFgBoQBrAFgBwQBrAFgB4QBr
AFgBAQFrAFgBIAFrAFgBIQFrAFgBQAFrAFgBQQFrAFgBQwFzAFgBYAFrAFgBYQFrAFgBgAFrAFgB
gQFrAFgBoAFrAFgBoQFrAFgBwAFrAFgBwQFrAFgB4AFrAFgB4QFrAFgBAAJrAFgBAQJrAFgBIAJr
AFgBIQJrAFgBQAJrAFgBQQJrAFgBYQJrAFgBgAJrAFgBgQJrAFgBoAJrAFgBoQJrAFgBwAJrAFgB
wQJrAFgB4AJrAFgB4QJrAFgBAANrAFgBAQNrAFgBIANrAFgBIQNrAFgBQANrAFgBQQNrAFgBYANr
AFgBYQNrAFgBgANrAFgBgQNrAFgBoANrAFgBoQNrAFgBwANrAFgBwQNrAFgB4ANrAFgB4QNrAFgB
AARrAFgBAQRrAFgBIARrAFgBIQRrAFgBQARrAFgBQQRrAFgBYARrAFgBYQRrAFgBgARrAFgBgQRr
AFgBoARrAFgBoQRrAFgBwARrAFgBwQRrAFgB4ARrAFgB4QRrAFgBAAVrAFgBAQVrAFgBIAVrAFgB
IQVrAFgBQAVrAFgBQQVrAFgBYAVrAFgBYQVrAFgBgAVrAFgBgQVrAFgBoAVrAFgBoQVrAFgBwAVr
AFgByQV7AJsC4AVrAFgB6QV7AJsCAAZrAFgBAQZrAFgBIAZrAFgBQAZrAFgBYAZrAFgBgAZrAFgB
oAZrAFgBwAZrAFgB4AZrAFgBAAdrAFgBIAdrAFgBQAdrAFgBYAdrAFgBgAdrAFgBoAdrAFgBwAdr
AFgB4AdrAFgBAAhrAFgBIAhrAFgBQAhrAFgBYAhrAFgBgAhrAFgBoAhrAFgBwAhrAFgB4AhrAFgB
IAlrAFgBQAlrAFgBYAlrAFgBgAlrAFgBoAlrAFgBwAlrAFgB4AlrAFgBAAprAFgBQAprAFgBYApr
AFgBgAprAFgBoAprAFgBwAprAFgB4AprAFgBAAtrAFgBIAtrAFgBQAtrAFgBYAtrAFgBgAtrAFgB
oAtrAFgB4AtrAFgBAAxrAFgBIAxrAFgBQAxrAFgBgAxrAFgBoAxrAFgBwAxrAFgB4AxrAFgBGwB4
AMYA5gDvAP4ADQEDAAEABAAGAAUAIAAGACQABwAqAAgALAAKAC4ACwAwAAAAlw4xAgAABxExAgAA
8hAxAgAAagA1AgAAvQ87AgAA5wBBAgAAHgdBAgAA/Q1BAgAAPwdBAgAAHgZBAgAAEAlBAgAAZAhB
AgAA9AdBAgAAEQhBAgAALwlFAgAAdA1FAgAA9AVFAgAArgdJAgAAcQZBAgAATAZBAgAAIwtBAgAA
mQVFAgAAmBBOAgAAog1BAgAANghBAgAAQRBUAgAAugVFAgAAwQtFAgAAnwtBAgAAvQ9ZAgAAlg9f
AgAAqwZBAgAA8RFBAgAAjwZBAgAAZQlBAgAAwxFFAgAAZAhBAgAAYgxBAgAAzQdBAgAAHgdFAgAA
YwdBAgAAUAxBAgAANwtBAgAAUAxBAgAANwtBAgAALA5kAgAAoQhpAgAAERFuAgIACQADAAEACgAD
AAIACwAFAAEADAAFAAIADQAHAAEADgAHAAIADwAJAAEAEAAJAAIAEQALAAEAEgALAAIAFAANAAEA
FQANAAIAFgAPAAEAFwAPAAIAGAARAAEAGQARAAIAGgATAAEAGwATAAIAHAAVAAEAHQAVAAIAHgAX
AAEAHwAXAAIAIAAZAAEAIQAZAAIAIgAbAAEAIwAbAAIAJAAdAAEAJQAdAAIAJgAfAAEAJwAfAAIA
KAAhAAEAKQAhAAIAKgAjAAEAKwAjAAIALAAlAAEALQAlAAIALgAnAAEALwAnAAIAMAApAAEAMQAp
AAIAMgArAAEAMwArAAIANAAtAAEANQAtAAIANgAvAAEANwAvAAIAOAAxAAEAOQAxAAIAOgAzAAEA
OwAzAAIAPAA1AAEAPQA1AAIAPgA3AAEAPwA3AAIAQAA5AAEAQQA5AAIAQgA7AAEAQwA7AAIARAA9
AAEARQA9AAIARgA/AAEARwA/AAIASQBBAAEASgBBAAIASwBDAAEATABDAAIATQBFAAEATgBFAAIA
TwBHAAEAUABHAAIAUgBJAAEAUwBJAAIAVABLAAEAVQBLAAIAVgBNAAEAVwBNAAIAWABPAAEAWQBP
AAIAWgBRAAEAWwBRAAIAXABTAAEAXQBTAAIAXwBVAAEAYABVAAIAYQBXAAEAYgBXAAIAZABZAAEA
ZQBZAAIAZgBbAAEAZwBbAAIAawBdAAIAbABfAAEAbQBfAAIAbgBhAJUApQASAQSAAAABAAAAZh/E
SwAAAAAAALMGAAAEAAAAAAAAAAAAAAA4AakAAAAAAAsAAAAAAAAAAAAAAEEB1AsAAAAABAAAAAAA
AAAAAAAAOAGyDAAAAAAEAAAAAAAAAAAAAAA4AUQAAAAAAAsAAAAAAAAAAAAAAEEBGwAAAAAACgAA
AAAAAAAAAAAASgHBDQAAAAAAAAAAAQAAANUOAAAMAAIAAAAUANMAOgDSAHMAZwAcAQAAAAAATGlz
dGAxADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVAB2
YWx1ZV9fAFN5c3RlbS5EYXRhAGdldF9vcHBvcnR1bml0aWVzRGF0YQBzZXRfb3Bwb3J0dW5pdGll
c0RhdGEAc2F2ZV90aGVfZGF0YQBPcHBvcnR1bml0aWVzZGF0YQBzYXZlX2ludG9fZGIAbXNjb3Js
aWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAc2F2ZV9wb2MAZ2V0X25vdGljZUlkAHNldF9u
b3RpY2VJZABBZGQAPG9wcG9ydHVuaXRpZXNEYXRhPmtfX0JhY2tpbmdGaWVsZAA8bm90aWNlSWQ+
a19fQmFja2luZ0ZpZWxkADxhd2FyZD5rX19CYWNraW5nRmllbGQAPHBsYWNlT2ZQZXJmb3JtYW5j
ZT5rX19CYWNraW5nRmllbGQAPHR5cGVPZlNldEFzaWRlPmtfX0JhY2tpbmdGaWVsZAA8ZnVsbFBh
cmVudFBhdGhDb2RlPmtfX0JhY2tpbmdGaWVsZAA8Y2xhc3NpZmljYXRpb25Db2RlPmtfX0JhY2tp
bmdGaWVsZAA8bmFpY3NDb2RlPmtfX0JhY2tpbmdGaWVsZAA8Y291bnRyeUNvZGU+a19fQmFja2lu
Z0ZpZWxkADx6aXBjb2RlPmtfX0JhY2tpbmdGaWVsZAA8dGl0bGU+a19fQmFja2luZ0ZpZWxkADxm
dWxsUGFyZW50UGF0aE5hbWU+a19fQmFja2luZ0ZpZWxkADxmdWxsTmFtZT5rX19CYWNraW5nRmll
bGQAPHJlc3BvbnNlRGVhZExpbmU+a19fQmFja2luZ0ZpZWxkADxwaG9uZT5rX19CYWNraW5nRmll
bGQAPGJhc2VUeXBlPmtfX0JhY2tpbmdGaWVsZAA8YXJjaGl2ZVR5cGU+a19fQmFja2luZ0ZpZWxk
ADxvcmdhbml6YXRpb25UeXBlPmtfX0JhY2tpbmdGaWVsZAA8dHlwZT5rX19CYWNraW5nRmllbGQA
PHBvc3RlZERhdGU+a19fQmFja2luZ0ZpZWxkADxhcmNoaXZlRGF0ZT5rX19CYWNraW5nRmllbGQA
PHN0YXRlPmtfX0JhY2tpbmdGaWVsZAA8YWN0aXZlPmtfX0JhY2tpbmdGaWVsZAA8aHJlZj5rX19C
YWNraW5nRmllbGQAPHVpTGluaz5rX19CYWNraW5nRmllbGQAPGFkZGl0aW9uYWxJbmZvTGluaz5r
X19CYWNraW5nRmllbGQAPHJlbD5rX19CYWNraW5nRmllbGQAPGVtYWlsPmtfX0JhY2tpbmdGaWVs
ZAA8dHlwZU9mU2V0QXNpZGVEZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPGRlc2NyaXB0aW9u
PmtfX0JhY2tpbmdGaWVsZAA8c29saWNpdGF0aW9uTnVtYmVyPmtfX0JhY2tpbmdGaWVsZAA8dG90
YWxSZWNvcmRzPmtfX0JhY2tpbmdGaWVsZAA8cmVzb3VyY2VMaW5rcz5rX19CYWNraW5nRmllbGQA
PGxpbmtzPmtfX0JhY2tpbmdGaWVsZAA8b2ZmaWNlQWRkcmVzcz5rX19CYWNraW5nRmllbGQAPHBv
aW50T2ZDb250YWN0PmtfX0JhY2tpbmdGaWVsZAA8b2Zmc2V0PmtfX0JhY2tpbmdGaWVsZAA8bGlt
aXQ+a19fQmFja2luZ0ZpZWxkADxmYXg+a19fQmFja2luZ0ZpZWxkADxjaXR5PmtfX0JhY2tpbmdG
aWVsZABSZWFkVG9FbmQARGJDb21tYW5kAFNxbENvbW1hbmQAc2V0X01ldGhvZABnZXRfYXdhcmQA
c2V0X2F3YXJkAGdldF9wbGFjZU9mUGVyZm9ybWFuY2UAc2V0X3BsYWNlT2ZQZXJmb3JtYW5jZQBk
ZWZhdWx0SW5zdGFuY2UAZ2V0X3R5cGVPZlNldEFzaWRlAHNldF90eXBlT2ZTZXRBc2lkZQBnZXRf
ZnVsbFBhcmVudFBhdGhDb2RlAHNldF9mdWxsUGFyZW50UGF0aENvZGUAZ2V0X2NsYXNzaWZpY2F0
aW9uQ29kZQBzZXRfY2xhc3NpZmljYXRpb25Db2RlAGdldF9uYWljc0NvZGUAc2V0X25haWNzQ29k
ZQBnZXRfY291bnRyeUNvZGUAc2V0X2NvdW50cnlDb2RlAGdldF96aXBjb2RlAHNldF96aXBjb2Rl
AFNUXzQ3MjNlNzhlNDk1ODRiYTU5Y2IyNzI3OGRhZDUxZGZlAFZhcmlhYmxlAElEaXNwb3NhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF90aXRsZQBzZXRfdGl0bGUA
Z2V0X2Z1bGxQYXJlbnRQYXRoTmFtZQBzZXRfZnVsbFBhcmVudFBhdGhOYW1lAGdldF9mdWxsTmFt
ZQBzZXRfZnVsbE5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBn
ZXRfcmVzcG9uc2VEZWFkTGluZQBzZXRfcmVzcG9uc2VEZWFkTGluZQBnZXRfcGhvbmUAc2V0X3Bo
b25lAHNldF9Db21tYW5kVHlwZQBnZXRfYmFzZVR5cGUAc2V0X2Jhc2VUeXBlAGdldF9hcmNoaXZl
VHlwZQBzZXRfYXJjaGl2ZVR5cGUAZ2V0X29yZ2FuaXphdGlvblR5cGUAc2V0X29yZ2FuaXphdGlv
blR5cGUAc2V0X0NvbnRlbnRUeXBlAGdldF90eXBlAHNldF90eXBlAHN0b3JlZFByb2NlZHVyZQBG
YWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3Jp
cHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAV2ViUmVzcG9uc2UAR2V0
UmVzcG9uc2UARGlzcG9zZQBnZXRfcG9zdGVkRGF0ZQBzZXRfcG9zdGVkRGF0ZQBnZXRfYXJjaGl2
ZURhdGUAc2V0X2FyY2hpdmVEYXRlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBnZXRfc3Rh
dGUAc2V0X3N0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNv
ZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUA
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRG
cmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3Nl
bWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Njcmlw
dFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAZ2V0X2FjdGl2ZQBzZXRfYWN0
aXZlAGdldF9ocmVmAHNldF9ocmVmAEVuY29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VG9TdHJpbmcAZ2V0X0xlbmd0aABzZXRfQ29udGVudExlbmd0aABTZWFyY2hMaW5rAGdldF91aUxp
bmsAc2V0X3VpTGluawBnZXRfYWRkaXRpb25hbEluZm9MaW5rAHNldF9hZGRpdGlvbmFsSW5mb0xp
bmsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AGdldF9yZWwAc2V0X3JlbABnZXRfZW1haWwAc2V0X2VtYWlsAFNUXzQ3MjNlNzhlNDk1ODRiYTU5
Y2IyNzI3OGRhZDUxZGZlLmRsbABEQk51bGwAR2V0UmVzcG9uc2VTdHJlYW0AZ2V0X0l0ZW0AU3lz
dGVtAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxl
Y3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAGdldF90eXBlT2ZTZXRB
c2lkZURlc2NyaXB0aW9uAHNldF90eXBlT2ZTZXRBc2lkZURlc2NyaXB0aW9uAGdldF9kZXNjcmlw
dGlvbgBzZXRfZGVzY3JpcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAE5ld3RvbnNvZnQuSnNvbgBq
c29uAEN1bHR1cmVJbmZvAGdldF9zb2xpY2l0YXRpb25OdW1iZXIAc2V0X3NvbGljaXRhdGlvbk51
bWJlcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEpzb25IZWxw
ZXIAU3FsUGFyYW1ldGVyAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBnZXRfdG90YWxSZWNvcmRzAHNldF90b3RhbFJlY29yZHMAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQ3MjNlNzhlNDk1ODRiYTU5Y2IyNzI3
OGRhZDUxZGZlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBz
YXZlX29wcG9ydHVuaXRpZXMAU1RfNDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4ZGFkNTFkZmUuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAGdldF9yZXNvdXJjZUxpbmtzAHNldF9yZXNv
dXJjZUxpbmtzAHNhdmVfbGlua3MAZ2V0X2xpbmtzAHNldF9saW5rcwBTVF80NzIzZTc4ZTQ5NTg0
YmE1OWNiMjcyNzhkYWQ1MWRmZS5TQU0uSGVscGVycwBnZXRfUGFyYW1ldGVycwBjbWRQYXJhbWV0
ZXJzAFN1Y2Nlc3MAc2F2ZV9vZmZpY2VfYWRkZXNzAGdldF9vZmZpY2VBZGRyZXNzAHNldF9vZmZp
Y2VBZGRyZXNzAE9mZmljZWFkZHJlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABGb3Jt
YXQAZ2V0X3BvaW50T2ZDb250YWN0AHNldF9wb2ludE9mQ29udGFjdABQb2ludG9mY29udGFjdABE
ZXNlcmlhbGl6ZU9iamVjdABDb252ZXJ0VG9PYmplY3QAU3lzdGVtLk5ldABnZXRfb2Zmc2V0AHNl
dF9vZmZzZXQAZ2V0X2xpbWl0AHNldF9saW1pdABnZXRfRGVmYXVsdABTVF80NzIzZTc4ZTQ5NTg0
YmE1OWNiMjcyNzhkYWQ1MWRmZS5TQU0uUmVzdWx0AHNldF9UYXNrUmVzdWx0AE9wcG9ydHVuaXR5
UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRfQ3VycmVudABKc29uQ29udmVydABXZWJS
ZXF1ZXN0AE1vdmVOZXh0AFN5c3RlbS5UZXh0AGdldF9mYXgAc2V0X2ZheABnZXRfQXNzZW1ibHkA
RXhlY3V0ZU5vblF1ZXJ5AGdldF9jaXR5AHNldF9jaXR5AAAAACEkAFAAYQBjAGsAYQBnAGUAOgA6
AEEAUABJAFUAUgBMAACAmz8AbABpAG0AaQB0AD0AMQAwACYAYQBwAGkAXwBrAGUAeQA9AHsAMAB9
ACYAcABvAHMAdABlAGQARgByAG8AbQA9ADAAMQAvADAAMQAvADIAMAAxADgAJgBwAG8AcwB0AGUA
ZABUAG8APQAwADUALwAxADAALwAyADAAMQA4ACYAdABpAHQAbABlAD0ARAByAGkAdgBpAG4AZwAA
ISQAUABhAGMAawBhAGcAZQA6ADoAQQBQAEkASwBlAHkAAAdHAEUAVAAAP2EAcABwAGwAaQBjAGEA
dABpAG8AbgAvAGoAcwBvAG4AOwAgAGMAaABhAHIAcwBlAHQAPQB1AHQAZgAtADgAAQEANSQAUABh
AGMAawBhAGcAZQA6ADoAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAE0AAbgBvAHQA
aQBjAGUASQBkAAANQAB0AGkAdABsAGUAACdAAHMAbwBsAGkAYwBpAHQAYQB0AGkAbwBuAE4AdQBt
AGIAZQByAAAnQABmAHUAbABsAFAAYQByAGUAbgB0AFAAYQB0AGgATgBhAG0AZQAAJ0AAZgB1AGwA
bABQAGEAcgBlAG4AdABQAGEAdABoAEMAbwBkAGUAABdAAHAAbwBzAHQAZQBkAEQAYQB0AGUAAAtA
AHQAeQBwAGUAABNAAGIAYQBzAGUAVAB5AHAAZQAAGUAAYQByAGMAaABpAHYAZQBUAHkAcABlAAAZ
QABhAHIAYwBoAGkAdgBlAEQAYQB0AGUAADVAAHQAeQBwAGUATwBmAFMAZQB0AEEAcwBpAGQAZQBE
AGUAcwBjAHIAaQBwAHQAaQBvAG4AAB9AAHQAeQBwAGUATwBmAFMAZQB0AEEAcwBpAGQAZQAAI0AA
cgBlAHMAcABvAG4AcwBlAEQAZQBhAGQATABpAG4AZQAAFUAAbgBhAGkAYwBzAEMAbwBkAGUAACdA
AGMAbABhAHMAcwBpAGYAaQBjAGEAdABpAG8AbgBDAG8AZABlAAAPQABhAGMAdABpAHYAZQAADUAA
YQB3AGEAcgBkAAAZQABkAGUAcwBjAHIAaQBwAHQAaQBvAG4AACNAAG8AcgBnAGEAbgBpAHoAYQB0
AGkAbwBuAFQAeQBwAGUAACdAAHAAbABhAGMAZQBPAGYAUABlAHIAZgBvAHIAbQBhAG4AYwBlAAAn
QABhAGQAZABpAHQAaQBvAG4AYQBsAEkAbgBmAG8ATABpAG4AawAAD0AAdQBpAEwAaQBuAGsAACVz
AGEAdgBlAF8AbwBwAHAAbwByAHQAdQBuAGkAdABpAGUAcwAAEUAAegBpAHAAYwBvAGQAZQAAC0AA
YwBpAHQAeQAAGUAAYwBvAHUAbgB0AHIAeQBDAG8AZABlAAANQABzAHQAYQB0AGUAACdzAGEAdgBl
AF8AbwBmAGYAaQBjAGUAXwBhAGQAZAByAGUAcwBzAAAJQABmAGEAeAAADUAAZQBtAGEAaQBsAAAN
QABwAGgAbwBuAGUAABNAAGYAdQBsAGwATgBhAG0AZQAAEXMAYQB2AGUAXwBwAG8AYwAAC0AAbABp
AG4AawAAFXMAYQB2AGUAXwBsAGkAbgBrAHMAAHFTAFQAXwA0ADcAMgAzAGUANwA4AGUANAA5ADUA
OAA0AGIAYQA1ADkAYwBiADIANwAyADcAOABkAGEAZAA1ADEAZABmAGUALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABMhzk/6if5Lu4MU7/EvgVkABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEXkJBwQOEgwSPRJBBSAAEoCFBSAAEoCJBiABEoCNHAMgABwDIAAOBQACDg4O
BQACDg4cBgABEoCVDgQgAQEKBCAAEj0FIAASgJkFAAASgJ0JIAIBEoCZEoCdBAoBEgwOBwQSURJV
FRFZARJNEk0GIAIBDhJRBiABARGArQYVEkkBEk0IIAAVEVkBEwAGFRFZARJNBCAAEwAFIAASgLEG
IAESTRJNAyAAAgMgAAgOBwQdEhAIEhAVEkkBEk0FIAIBDhwFIAEBEwAEBhKAuQgHARUSSQESTQ4H
BB0SGAgSGBUSSQESTQ4HBB0SHAgSHBUSSQESTQQHAR4AAh4ABhABAR4ADgQKAR4ACAABEoDBEYDF
BSAAEoDJByACAQ4SgMkIt3pcVhk04IkIiYRdzYCAzJEIMK1P5rKmru0EAAAAAAQBAAAAAgYIBAYd
EhAEBh0SIAIGDgIGHAMGEWkEBh0SGAMGEhQEBh0SHAMGHQ4DBhJxAwYSdQMGEiwDBhEwBSABARIM
CiACAQ4VEkkBEk0GIAEBHRIQBiACARIUDgcgAgEdEhgOByACAR0SHA4FIAAdEhAFIAAdEiAGIAEB
HRIgBCABARwEIAARaQUgAQERaQUgAB0SGAYgAQEdEhgEIAASFAUgAQESFAUgAB0SHAYgAQEdEhwE
IAAdDgUgAQEdDgQAABJxBAAAEnUFAAEBEnUEAAASLAMAAAEDKAAIBSgAHRIQBSgAHRIgAygADgMo
ABwEKAARaQUoAB0SGAQoABIUBSgAHRIcBCgAHQ4ECAAScQQIABJ1BAgAEiwIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzQ3MjNlNzhlNDk1ODRi
YTU5Y2IyNzI3OGRhZDUxZGZlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAEBbAAAAAAAAAAAAAFpbAAAAIAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABMWwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAA
AAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAAAAAAAAAA
GgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAMRLZh8A
AAEAxEtmHz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkA
bgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdABy
AGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMA
bwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABw
ACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANAA3ADIAMwBlADcA
OABlADQAOQA1ADgANABiAGEANQA5AGMAYgAyADcAMgA3ADgAZABhAGQANQAxAGQAZgBlAAAAPgAP
AAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAMAAzADgALgAxADkAMwA5ADYA
AAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANAA3ADIAMwBlADcAOABl
ADQAOQA1ADgANABiAGEANQA5AGMAYgAyADcAMgA3ADgAZABhAGQANQAxAGQAZgBlAC4AZABsAGwA
AABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAA
AAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA0ADcAMgAz
AGUANwA4AGUANAA5ADUAOAA0AGIAYQA1ADkAYwBiADIANwAyADcAOABkAGEAZAA1ADEAZABmAGUA
LgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8ANAA3ADIAMwBl
ADcAOABlADQAOQA1ADgANABiAGEANQA5AGMAYgAyADcAMgA3ADgAZABhAGQANQAxAGQAZgBlAAAA
QgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADAAMwA4AC4AMQA5
ADMAOQA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA4ADAAMwA4AC4AMQA5ADMAOQA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAAGw7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="145"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="264"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="142"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="234"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="168"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="204"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="250"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Invoke API"
          TopLeft="295.5,31.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>