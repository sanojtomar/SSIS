<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/2/2022 6:54:01 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SANOJ-KUMAR"
  DTS:CreatorName="SANOJ-KUMAR\Rita Tomar"
  DTS:DTSID="{B172A76E-30AB-4383-95AC-0F4E9B651A79}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="16393"
  DTS:MaxErrorCount="10"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="48"
  DTS:VersionGUID="{3FF76471-2CBB-4473-A555-4AD19443BA5D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{45547FFA-610E-4FF7-98A2-3F5A73644C3E}"
      DTS:ObjectName="APIKey"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">WW7ovYVmLWPHWSUR7hTuXTdOX8AxDfS0PLMOWFvZ</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C294E8A5-4156-4275-BD4F-E18984DAF9C4}"
      DTS:ObjectName="APIURL"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://api.sam.gov/opportunities/v2/search</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D7CEBA34-7827-49FA-8289-FB2238DFD3BD}"
      DTS:ObjectName="ConnectionString"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SANOJ-KUMAR\TOMAR;Initial Catalog=sam.gov;User=sa;Password=Office@357</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Invoke API"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Invoke API and get the result back"
      DTS:DTSID="{952A32C3-BE41-4E5C-88D5-180C9E4D8BD1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="10"
      DTS:ObjectName="Invoke API"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4723e78e49584ba59cb27278dad51dfe"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::APIKey,$Package::APIURL,$Package::ConnectionString">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_4723e78e49584ba59cb27278dad51dfe.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4BCE7011-2467-498F-8321-1A1019AEDB58}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4723e78e49584ba59cb27278dad51dfe</RootNamespace>
    <AssemblyName>ST_4723e78e49584ba59cb27278dad51dfe</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\All Files\Learning\SSIS\open.gsa.gov\open.gsa.gov\lib\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Net.Http.Formatting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL" />
    <Reference Include="System.Net.Http.WebRequest" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Settings.get_Default():ST_4723e78e49584ba59cb27278dad51dfe.Properties.Sett" +
    "ings")]

namespace ST_4723e78e49584ba59cb27278dad51dfe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Collections.Generic;
using Newtonsoft.Json;
using ST_4723e78e49584ba59cb27278dad51dfe.SAM.Helpers;
using ST_4723e78e49584ba59cb27278dad51dfe.SAM.Result;
using System.Net;
using System.IO;
using System.Text;
using System.Data.SqlClient;

#endregion

namespace ST_4723e78e49584ba59cb27278dad51dfe
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                //TODO: Uncomment below commented code to connect to API

                //string serviceUrl = Dts.Variables["$Package::APIURL"].Value.ToString();
                //string APIUrl = string.Format(serviceUrl + "?limit=10&api_key={0}&postedFrom=01/01/2018&postedTo=05/10/2018&title=Driving", Dts.Variables["$Package::APIKey"].Value.ToString());

                //WebRequest request = WebRequest.Create(APIUrl);
                //request.Method = "GET";
                //request.ContentType = "application/json; charset=utf-8";
                //request.ContentLength = 0;
                //string result = "";
                //OpportunityResult data = null;
                //using (WebResponse response = request.GetResponse())
                //{
                //    Stream responseStream = response.GetResponseStream();
                //    using (StreamReader streamReader = new StreamReader(responseStream, Encoding.Default))
                //    {
                //        result = streamReader.ReadToEnd();
                //    }

                //    data = JsonHelper.ConvertToObject<OpportunityResult>(result);
                //    save_the_data(data);


                //}


                // TODO: Comment below code to disconnect local file

                using (StreamReader r = new StreamReader(@"C:\All Files\Learning\SSIS\open.gsa.gov\open.gsa.gov\data\sam.json"))
                {
                    string result = r.ReadToEnd();
                    OpportunityResult data = JsonHelper.ConvertToObject<OpportunityResult>(result);
                    save_the_data(data);
                }


                Dts.TaskResult = (int)ScriptResults.Success;

            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        private void save_the_data(OpportunityResult data)
        {
            save_opportunities(data.opportunitiesData);
        }

        private void save_into_db(string storedProcedure, List<SqlParameter> cmdParameters)
        {
            using (SqlConnection con = new SqlConnection(Dts.Variables["$Package::ConnectionString"].Value.ToString()))
            {
                using (SqlCommand cmd = new SqlCommand(storedProcedure, con))
                {
                    cmd.CommandType = CommandType.StoredProcedure;

                    foreach (var param in cmdParameters)
                    {
                        cmd.Parameters.Add(param);
                    }
                    con.Open();
                    cmd.ExecuteNonQuery();
                }
            }
        }

     private void save_opportunities(Opportunitiesdata[] opportunitiesData)
        {
            if(opportunitiesData != null && opportunitiesData.Length >0)
            {
                foreach (var item in opportunitiesData)
                {
                    List<SqlParameter> cmdParameters = new List<SqlParameter>();
                    cmdParameters.Add(new SqlParameter("@noticeId", item.noticeId));
                    cmdParameters.Add(new SqlParameter("@title", (object)item.title ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@solicitationNumber", (object)item.solicitationNumber ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@fullParentPathName", (object)item.fullParentPathName ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@fullParentPathCode", (object)item.fullParentPathCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@postedDate", (object)item.postedDate ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@type", (object)item.type ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@baseType", (object)item.baseType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@archiveType", (object)item.archiveType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@archiveDate", (object)item.archiveDate ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@typeOfSetAsideDescription", (object)item.typeOfSetAsideDescription ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@typeOfSetAside", (object)item.typeOfSetAside ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@responseDeadLine", (object)item.responseDeadLine ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@naicsCode", (object)item.naicsCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@classificationCode", (object)item.classificationCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@active", (object)item.active ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@award", (object)item.award ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@description", (object)item.description ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@organizationType", (object)item.organizationType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@placeOfPerformance", (object)item.placeOfPerformance ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@additionalInfoLink", (object)item.additionalInfoLink ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@uiLink", (object)item.uiLink ?? DBNull.Value));

                    save_into_db("save_opportunities", cmdParameters);


                    if (item.officeAddress != null)
                    {
                        save_office_addess(item.officeAddress, item.noticeId);
                    }

                    if (item.pointOfContact != null && item.pointOfContact.Length > 0)
                    {
                        save_poc(item.pointOfContact, item.noticeId);
                    }

                    if (item.links != null && item.links.Length > 0)
                    {
                        save_links(item.links, item.noticeId);
                    }

                }
            }
        }

        private void save_office_addess(Officeaddress officeAddress, string noticeId)
        {
            List<SqlParameter> cmdParameters = new List<SqlParameter>();
            cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
            cmdParameters.Add(new SqlParameter("@zipcode", (object)officeAddress.zipcode ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@city", (object)officeAddress.city ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@countryCode", (object)officeAddress.countryCode ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@state", (object)officeAddress.state ?? DBNull.Value));
            save_into_db("save_office_address", cmdParameters);
        }

        private void save_poc(Pointofcontact[] pointOfContact, string noticeId)
        {
            foreach (var item in pointOfContact)
            {
                List<SqlParameter> cmdParameters = new List<SqlParameter>();
                cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
                cmdParameters.Add(new SqlParameter("@fax", (object)item.fax ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@type", (object)item.type ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@email", (object)item.email ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@phone", (object)item.phone ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@title", (object)item.title ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@fullName", (object)item.fullName ?? DBNull.Value));

                save_into_db("save_poc", cmdParameters);
            }

        }

        private void save_links(Link[] links, string noticeId)
        {
            foreach (var item in links)
            {
                List<SqlParameter> cmdParameters = new List<SqlParameter>();
                cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
                cmdParameters.Add(new SqlParameter("@type", (object)item.rel ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@link", (object)item.href ?? DBNull.Value));

                save_into_db("save_links", cmdParameters);
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }


    namespace SAM.Helpers
    {
        /// <summary>
        /// JSON serializer
        /// </summary>
        public static class JsonHelper
        {

            /// <summary>
            /// Convert JSON to object
            /// </summary>
            /// <typeparam name="T">JSON</typeparam>
            /// <param name="json"></param>
            /// <returns>Object</returns>
            public static T ConvertToObject<T>(string json) where T : class, new()
            {
                T obj = null;

                if (json != null && json.Length > 0)
                {
                    try
                    {
                        obj = JsonConvert.DeserializeObject<T>(json);
                    }
                    catch
                    {
                        obj = null;
                    }
                }

                return obj;
            }
        }
    }

    namespace SAM.Result
    {
        public class OpportunityResult
        {
            public int totalRecords { get; set; }
            public int limit { get; set; }
            public int offset { get; set; }
            public Opportunitiesdata[] opportunitiesData { get; set; }
            public SearchLink[] links { get; set; }
        }

        public class Opportunitiesdata
        {
            public string noticeId { get; set; }
            public string title { get; set; }
            public string solicitationNumber { get; set; }
            public string fullParentPathName { get; set; }
            public string fullParentPathCode { get; set; }
            public string postedDate { get; set; }
            public string type { get; set; }
            public string baseType { get; set; }
            public string archiveType { get; set; }
            public object archiveDate { get; set; }
            public object typeOfSetAsideDescription { get; set; }
            public object typeOfSetAside { get; set; }
            public DateTime responseDeadLine { get; set; }
            public string naicsCode { get; set; }
            public string classificationCode { get; set; }
            public string active { get; set; }
            public object award { get; set; }
            public Pointofcontact[] pointOfContact { get; set; }
            public string description { get; set; }
            public string organizationType { get; set; }
            public Officeaddress officeAddress { get; set; }
            public object placeOfPerformance { get; set; }
            public object additionalInfoLink { get; set; }
            public string uiLink { get; set; }
            public Link[] links { get; set; }
            public string[] resourceLinks { get; set; }
        }

        public class Officeaddress
        {
            public string zipcode { get; set; }
            public string city { get; set; }
            public string countryCode { get; set; }
            public string state { get; set; }
        }

        public class Pointofcontact
        {
            public object fax { get; set; }
            public string type { get; set; }
            public string email { get; set; }
            public string phone { get; set; }
            public object title { get; set; }
            public string fullName { get; set; }
        }

        public class Link
        {
            public string rel { get; set; }
            public string href { get; set; }
        }

        public class SearchLink
        {
            public string rel { get; set; }
            public string href { get; set; }
        }

    }

}]]></ProjectItem>
          <ProjectItem
            Name="app.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4723e78e49584ba59cb27278dad51dfe</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4723e78e49584ba59cb27278dad51dfe</msb:DisplayName>
		<msb:ProjectId>{A0C7C505-794D-41C6-B2F9-C44BD564D440}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4723e78e49584ba59cb27278dad51dfe.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="app.config"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="05f4e672f78f4f10a283b468c880e7a2">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>145</msb:LineNumber>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="5a33286a32d44ebf9c2b3211ed132ca0">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>264</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="c63414ded7a04e2cbb5d69046db0cec6">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>142</msb:LineNumber>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="33ae4d5389f44b6bbf234acf72534cb9">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>234</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="1aa36fb82cdf4d61abdc7a98d3d20ea0">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>168</msb:LineNumber>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="f621f0b40a70471d83867f529a4e5896">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>204</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="8128ac37b13d44a4aa66b581927d7de8">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>250</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4723e78e49584ba59cb27278dad51dfe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4723e78e49584ba59cb27278dad51dfe")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4723e78e49584ba59cb27278dad51dfe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4723e78e49584ba59cb27278dad51dfe.dll">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
BgBvDYgMEgAICdkLEgB9CdkLEgCqCHMMBgC2DREABgDVBksMCgDHC54LFgAGD2oHFgDMBmoHDgBr
BUcNDgDMB0QADgCvDOkQDgDGDEcNBgA7DEsMBgAeC0sMGgALEVoNBgA3CEsMBgDhBksMBgA0EZ0M
AAAAAAgAAAAAAAEAAQABABAAaAyoBjkAAQABAAEAEADXEJkQXQABAAkAAQAQAIoAmRBdAAYAFAAB
ABAA6A+ZEF0AIABJAAEAEAAyEJkQXQAkAFIAAQAQAHoLmRBdACoAXwABABAAMAuZEF0ALABkAIEB
EADVDVwPXQAuAGkAAAAQAGQO0w5dAC4AagAAARAAEA/TDn0AMABuAAMBAAD+DwAAWQAxAHEAAQB0
BCcBAQAfBScBAQAHBScBAQD0ACoBAQCxBC8BAQAXATQBAQAlAjQBAQBQBDQBAQA8AjQBAQCMATQB
AQAiAzQBAQAMAzQBAQCzAjQBAQDNAjQBAQA+AzcBAQAIBDcBAQBsATcBAQB6AjoBAQDUATQBAQCw
ATQBAQByAzQBAQAxATcBAQDnBD4BAQAzBDQBAQDqAjQBAQDIBEMBAQBIATcBAQC4AzcBAQCgAzQB
AQCxBEcBAQCSBEwBAQAMAjQBAQBLBTQBAQDvATQBAQBbAzQBAQA2BTcBAQAMAzQBAQDxAzQBAQCc
AjQBAQAlAjcBAQBgAjQBAQDcAzQBAQCKAzQBAQDcAzQBAQCKAzQBEQBXDFABEQB+CFQBEQDCBVgB
BgY8ACcBVoCpD1wBVoBeCFwBUCAAAAAAhgBuDAYAAQDAIAAAAACBAHwAYAEBANAgAAAAAIEAnABm
AQIAlCEAAAAAgQDADnEBBADgJAAAAACBALEPeAEFAIwlAAAAAIEAzQB/AQcAkCYAAAAAgQA9D4cB
CQASJwAAAACGGPsNBgALABonAAAAAIYIGw6MAAsAIicAAAAAhggsDgEACwArJwAAAACGCHkQjAAM
ADMnAAAAAIYIgxABAAwAPCcAAAAAhghjEIwADQBEJwAAAACGCG4QAQANAE0nAAAAAIYIUACPAQ4A
VScAAAAAhghmAHEBDgBeJwAAAACGCEgPlQEPAGYnAAAAAIYIUg+bAQ8AbycAAAAAhhj7DQYAEAB3
JwAAAACGCNYAIgAQAH8nAAAAAIYI4wAQABAAiCcAAAAAhggFByIAEQCQJwAAAACGCA8HEAARAJkn
AAAAAIYIew0iABIAoScAAAAAhgiSDRAAEgCqJwAAAACGCBkHIgATALInAAAAAIYIMAcQABMAuycA
AAAAhgj4BSIAFADDJwAAAACGCA8GEAAUAMwnAAAAAIYIyggiABUA1CcAAAAAhgjZCBAAFQDdJwAA
AACGCDwIIgAWAOUnAAAAAIYIRQgQABYA7icAAAAAhgjYByIAFwD2JwAAAACGCOUHEAAXAP8nAAAA
AIYI8gciABgABygAAAAAhggCCBAAGAAQKAAAAACGCOgITQAZABgoAAAAAIYI+AiiARkAISgAAAAA
hgjrDE0AGgApKAAAAACGCAkNogEaADIoAAAAAIYI0gVNABsAOigAAAAAhgjlBaIBGwBDKAAAAACG
CIoHpwEcAEsoAAAAAIYInwesARwAVCgAAAAAhghUBiIAHQBcKAAAAACGCGIGEAAdAGUoAAAAAIYI
JgYiAB4AbSgAAAAAhgg9BhAAHgB2KAAAAACGCNoKIgAfAH4oAAAAAIYI5QoQAB8AhygAAAAAhgiA
BU0AIACPKAAAAACGCIoFogEgAJgoAAAAAIYIDBCyASEAoCgAAAAAhggfELgBIQCpKAAAAACGCCcN
IgAiALEoAAAAAIYINw0QACIAuigAAAAAhggSCCIAIwDCKAAAAACGCCcIEAAjAMsoAAAAAIYIxA+/
ASQA0ygAAAAAhgjWD8QBJADcKAAAAACGCJQFTQAlAOQoAAAAAIYIqwWiASUA7SgAAAAAhghRC00A
JgD1KAAAAACGCGgLogEmAP4oAAAAAIYIOwsiACcABikAAAAAhghGCxAAJwAPKQAAAACGCEgPygEo
ABcpAAAAAIYIUg/QASgAICkAAAAAhggZD9cBKQAoKQAAAACGCCsP3AEpAG8nAAAAAIYY+w0GACoA
MSkAAAAAhgiQBiIAKgA5KQAAAACGCJwGEAAqAEIpAAAAAIYITREiACsASikAAAAAhghWERAAKwBT
KQAAAACGCHAGIgAsAFspAAAAAIYIgAYQACwAZCkAAAAAhggdCSIALQBsKQAAAACGCCcJEAAtAG8n
AAAAAIYY+w0GAC4AdSkAAAAAhgggEU0ALgB9KQAAAACGCCgRogEuAIYpAAAAAIYIPAgiAC8AjikA
AAAAhghFCBAALwCXKQAAAACGCP8LIgAwAJ8pAAAAAIYICQwQADAAqCkAAAAAhgi0ByIAMQCwKQAA
AACGCL4HEAAxALkpAAAAAIYIBQdNADIAwSkAAAAAhggPB6IBMgDKKQAAAACGCEcHIgAzANIpAAAA
AIYIVAcQADMAbycAAAAAhhj7DQYANADbKQAAAACGCO8LIgA0AOMpAAAAAIYI9wsQADQA7CkAAAAA
hgjwCiIANQD0KQAAAACGCPkKEAA1AG8nAAAAAIYY+w0GADYA/SkAAAAAhgjvCyIANgAFKgAAAACG
CPcLEAA2AA4qAAAAAIYI8AoiADcAFioAAAAAhgj5ChAANwBvJwAAAACGGPsNBgA4ACAqAAAAAJYA
UxDfADgAbycAAAAAgxj7DQYAOQBoKgAAAACTCMEN4gE5AJQqAAAAAJMIZgjnATkAmyoAAAAAkwhy
COwBOQCjKgAAAACWCI0Q8gE6AKoqAAAAAIYY+w0GADoAsioAAAAAkRgBDvcBOgAAAAEAlwAAAAEA
TggAAAIAmw8AAAEAagAAAAEA2g8AAAIA5wAAAAEAIxAAAAIA5wAAAAEAVg8AAAIA5wAAAAEA1AoA
AAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA
1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoA
AAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA
1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoA
AAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEAag0AAAEA1AoJAPsNAQARAPsN
BgAZAPsNCgApAPsNEAAxAPsNEAA5APsNEABBAPsNEABJAPsNEABRAPsNEABZAPsNEABhAPsNEABp
APsNBgDBAPsNBgDRAPsNBgDxAPsNFQB5APsNEAABAWEFIgAJAcIIBgBxAPYPKwARAcgQAQARAQIP
QAAZAUIMRgAhAcoKTQC5ABwLIgCZAPsNEAChAPsNUQApAcgHWAAMAO0NZgAUAP8QdgChAIwPewA5
AfAAgQAUABcRiABBAWMMBgApAT0RjAAMAPsNBgCRAPsNnwAMAPAApQBJAc4KqwBxAPsNBgC5APsN
BgBRASULjABZAUEQ3wBhAfMG6wBhATAR9ADZAPsN+gD5APsNBgAIAMgAHQEIAMwAIgEhAGsAIgEu
AAsAPQIuABMARgIuABsAZQIuACMAbgIuACsAlwIuADMAlwIuADsAlwIuAEMAbgIuAEsAnQIuAFMA
lwIuAFsAtAJBAGsAIgFDAGMAIgFhAGsAIgGBAGsAIgGhAGsAIgHBAGsAIgHhAGsAIgEBAWsAIgEg
AWsAIgEhAWsAIgFAAWsAIgFBAWsAIgFDAXMAIgFgAWsAIgFhAWsAIgGAAWsAIgGBAWsAIgGgAWsA
IgGhAWsAIgHAAWsAIgHBAWsAIgHgAWsAIgHhAWsAIgEAAmsAIgEBAmsAIgEgAmsAIgEhAmsAIgFA
AmsAIgFBAmsAIgFhAmsAIgGAAmsAIgGBAmsAIgGgAmsAIgGhAmsAIgHAAmsAIgHBAmsAIgHgAmsA
IgHhAmsAIgEAA2sAIgEBA2sAIgEgA2sAIgEhA2sAIgFAA2sAIgFBA2sAIgFgA2sAIgFhA2sAIgGA
A2sAIgGBA2sAIgGgA2sAIgGhA2sAIgHAA2sAIgHBA2sAIgHgA2sAIgHhA2sAIgEABGsAIgEBBGsA
IgEgBGsAIgEhBGsAIgFABGsAIgFBBGsAIgFgBGsAIgFhBGsAIgGABGsAIgGBBGsAIgGgBGsAIgGh
BGsAIgHABGsAIgHBBGsAIgHgBGsAIgHhBGsAIgEABWsAIgEBBWsAIgEgBWsAIgEhBWsAIgFABWsA
IgFBBWsAIgFgBWsAIgFhBWsAIgGABWsAIgGBBWsAIgGgBWsAIgGhBWsAIgHABWsAIgHJBXsAZQLg
BWsAIgHpBXsAZQIABmsAIgEBBmsAIgEgBmsAIgFABmsAIgFgBmsAIgGABmsAIgGgBmsAIgHABmsA
IgHgBmsAIgEAB2sAIgEgB2sAIgFAB2sAIgFgB2sAIgGAB2sAIgGgB2sAIgHAB2sAIgHgB2sAIgEA
CGsAIgEgCGsAIgFACGsAIgFgCGsAIgGACGsAIgGgCGsAIgHACGsAIgHgCGsAIgEgCWsAIgFACWsA
IgFgCWsAIgGACWsAIgGgCWsAIgHACWsAIgHgCWsAIgEACmsAIgFACmsAIgFgCmsAIgGACmsAIgGg
CmsAIgHACmsAIgHgCmsAIgEAC2sAIgEgC2sAIgFAC2sAIgFgC2sAIgGAC2sAIgGgC2sAIgHgC2sA
IgEADGsAIgEgDGsAIgFADGsAIgGADGsAIgGgDGsAIgHADGsAIgHgDGsAIgEbADEAkACwALkAyADX
AAMAAQAEAAYABQAgAAYAJAAHACoACAAsAAoALgALADAAAAAwDvsBAACHEPsBAAByEPsBAABqAP8B
AABWDwUCAADnAAsCAAATBwsCAACWDQsCAAA0BwsCAAATBgsCAADdCAsCAABJCAsCAADpBwsCAAAG
CAsCAAD8CA8CAAANDQ8CAADpBQ8CAACjBxMCAABmBgsCAABBBgsCAADpCgsCAACOBQ8CAAAjEBgC
AAA7DQsCAAArCAsCAADaDx4CAACvBQ8CAABsCw8CAABKCwsCAABWDyMCAAAvDykCAACgBgsCAABa
EQsCAACEBgsCAAArCQsCAAAsEQ8CAABJCAsCAAANDAsCAADCBwsCAAATBw8CAABYBwsCAAD7CwsC
AAD9CgsCAAD7CwsCAAD9CgsCAADFDS4CAACGCDMCAACREDgCAgAJAAMAAQAKAAMAAgALAAUAAQAM
AAUAAgANAAcAAQAOAAcAAgAPAAkAAQAQAAkAAgARAAsAAQASAAsAAgAUAA0AAQAVAA0AAgAWAA8A
AQAXAA8AAgAYABEAAQAZABEAAgAaABMAAQAbABMAAgAcABUAAQAdABUAAgAeABcAAQAfABcAAgAg
ABkAAQAhABkAAgAiABsAAQAjABsAAgAkAB0AAQAlAB0AAgAmAB8AAQAnAB8AAgAoACEAAQApACEA
AgAqACMAAQArACMAAgAsACUAAQAtACUAAgAuACcAAQAvACcAAgAwACkAAQAxACkAAgAyACsAAQAz
ACsAAgA0AC0AAQA1AC0AAgA2AC8AAQA3AC8AAgA4ADEAAQA5ADEAAgA6ADMAAQA7ADMAAgA8ADUA
AQA9ADUAAgA+ADcAAQA/ADcAAgBAADkAAQBBADkAAgBCADsAAQBDADsAAgBEAD0AAQBFAD0AAgBG
AD8AAQBHAD8AAgBJAEEAAQBKAEEAAgBLAEMAAQBMAEMAAgBNAEUAAQBOAEUAAgBPAEcAAQBQAEcA
AgBSAEkAAQBTAEkAAgBUAEsAAQBVAEsAAgBWAE0AAQBXAE0AAgBYAE8AAQBZAE8AAgBaAFEAAQBb
AFEAAgBcAFMAAQBdAFMAAgBfAFUAAQBgAFUAAgBhAFcAAQBiAFcAAgBkAFkAAQBlAFkAAgBmAFsA
AQBnAFsAAgBrAF0AAgBsAF8AAQBtAF8AAgBuAGEAXwBvANwABIAAAAEAAABmH/yXAAAAAAAAqAYA
AAQAAAAAAAAAAAAAAAIBqQAAAAAACwAAAAAAAAAAAAAACwF/CwAAAAAEAAAAAAAAAAAAAAACAUQA
AAAAAAQAAAAAAAAAAAAAAAIBSwwAAAAACwAAAAAAAAAAAAAACwEbAAAAAAAKAAAAAAAAAAAAAAAU
AVoNAAAAAAAAAAABAAAAbg4AAAwAAgAAABQA0wA6ANIAJgBVAOYAAAAATGlzdGAxADxNb2R1bGU+
AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVAB2YWx1ZV9fAFN5c3Rl
bS5EYXRhAGdldF9vcHBvcnR1bml0aWVzRGF0YQBzZXRfb3Bwb3J0dW5pdGllc0RhdGEAc2F2ZV90
aGVfZGF0YQBPcHBvcnR1bml0aWVzZGF0YQBzYXZlX2ludG9fZGIAbXNjb3JsaWIAU3lzdGVtLkNv
bGxlY3Rpb25zLkdlbmVyaWMAc2F2ZV9wb2MAZ2V0X25vdGljZUlkAHNldF9ub3RpY2VJZABBZGQA
PG9wcG9ydHVuaXRpZXNEYXRhPmtfX0JhY2tpbmdGaWVsZAA8bm90aWNlSWQ+a19fQmFja2luZ0Zp
ZWxkADxhd2FyZD5rX19CYWNraW5nRmllbGQAPHBsYWNlT2ZQZXJmb3JtYW5jZT5rX19CYWNraW5n
RmllbGQAPHR5cGVPZlNldEFzaWRlPmtfX0JhY2tpbmdGaWVsZAA8ZnVsbFBhcmVudFBhdGhDb2Rl
PmtfX0JhY2tpbmdGaWVsZAA8Y2xhc3NpZmljYXRpb25Db2RlPmtfX0JhY2tpbmdGaWVsZAA8bmFp
Y3NDb2RlPmtfX0JhY2tpbmdGaWVsZAA8Y291bnRyeUNvZGU+a19fQmFja2luZ0ZpZWxkADx6aXBj
b2RlPmtfX0JhY2tpbmdGaWVsZAA8dGl0bGU+a19fQmFja2luZ0ZpZWxkADxmdWxsUGFyZW50UGF0
aE5hbWU+a19fQmFja2luZ0ZpZWxkADxmdWxsTmFtZT5rX19CYWNraW5nRmllbGQAPHJlc3BvbnNl
RGVhZExpbmU+a19fQmFja2luZ0ZpZWxkADxwaG9uZT5rX19CYWNraW5nRmllbGQAPGJhc2VUeXBl
PmtfX0JhY2tpbmdGaWVsZAA8YXJjaGl2ZVR5cGU+a19fQmFja2luZ0ZpZWxkADxvcmdhbml6YXRp
b25UeXBlPmtfX0JhY2tpbmdGaWVsZAA8dHlwZT5rX19CYWNraW5nRmllbGQAPHBvc3RlZERhdGU+
a19fQmFja2luZ0ZpZWxkADxhcmNoaXZlRGF0ZT5rX19CYWNraW5nRmllbGQAPHN0YXRlPmtfX0Jh
Y2tpbmdGaWVsZAA8YWN0aXZlPmtfX0JhY2tpbmdGaWVsZAA8aHJlZj5rX19CYWNraW5nRmllbGQA
PHVpTGluaz5rX19CYWNraW5nRmllbGQAPGFkZGl0aW9uYWxJbmZvTGluaz5rX19CYWNraW5nRmll
bGQAPHJlbD5rX19CYWNraW5nRmllbGQAPGVtYWlsPmtfX0JhY2tpbmdGaWVsZAA8dHlwZU9mU2V0
QXNpZGVEZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPGRlc2NyaXB0aW9uPmtfX0JhY2tpbmdG
aWVsZAA8c29saWNpdGF0aW9uTnVtYmVyPmtfX0JhY2tpbmdGaWVsZAA8dG90YWxSZWNvcmRzPmtf
X0JhY2tpbmdGaWVsZAA8cmVzb3VyY2VMaW5rcz5rX19CYWNraW5nRmllbGQAPGxpbmtzPmtfX0Jh
Y2tpbmdGaWVsZAA8b2ZmaWNlQWRkcmVzcz5rX19CYWNraW5nRmllbGQAPHBvaW50T2ZDb250YWN0
PmtfX0JhY2tpbmdGaWVsZAA8b2Zmc2V0PmtfX0JhY2tpbmdGaWVsZAA8bGltaXQ+a19fQmFja2lu
Z0ZpZWxkADxmYXg+a19fQmFja2luZ0ZpZWxkADxjaXR5PmtfX0JhY2tpbmdGaWVsZABSZWFkVG9F
bmQARGJDb21tYW5kAFNxbENvbW1hbmQAZ2V0X2F3YXJkAHNldF9hd2FyZABnZXRfcGxhY2VPZlBl
cmZvcm1hbmNlAHNldF9wbGFjZU9mUGVyZm9ybWFuY2UAZGVmYXVsdEluc3RhbmNlAGdldF90eXBl
T2ZTZXRBc2lkZQBzZXRfdHlwZU9mU2V0QXNpZGUAZ2V0X2Z1bGxQYXJlbnRQYXRoQ29kZQBzZXRf
ZnVsbFBhcmVudFBhdGhDb2RlAGdldF9jbGFzc2lmaWNhdGlvbkNvZGUAc2V0X2NsYXNzaWZpY2F0
aW9uQ29kZQBnZXRfbmFpY3NDb2RlAHNldF9uYWljc0NvZGUAZ2V0X2NvdW50cnlDb2RlAHNldF9j
b3VudHJ5Q29kZQBnZXRfemlwY29kZQBzZXRfemlwY29kZQBTVF80NzIzZTc4ZTQ5NTg0YmE1OWNi
MjcyNzhkYWQ1MWRmZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBnZXRfdGl0bGUAc2V0X3RpdGxlAGdldF9mdWxsUGFyZW50UGF0aE5hbWUA
c2V0X2Z1bGxQYXJlbnRQYXRoTmFtZQBnZXRfZnVsbE5hbWUAc2V0X2Z1bGxOYW1lAERhdGVUaW1l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAZ2V0X3Jlc3BvbnNlRGVhZExpbmUAc2V0
X3Jlc3BvbnNlRGVhZExpbmUAZ2V0X3Bob25lAHNldF9waG9uZQBzZXRfQ29tbWFuZFR5cGUAZ2V0
X2Jhc2VUeXBlAHNldF9iYXNlVHlwZQBnZXRfYXJjaGl2ZVR5cGUAc2V0X2FyY2hpdmVUeXBlAGdl
dF9vcmdhbml6YXRpb25UeXBlAHNldF9vcmdhbml6YXRpb25UeXBlAGdldF90eXBlAHNldF90eXBl
AHN0b3JlZFByb2NlZHVyZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARGlzcG9zZQBnZXRfcG9zdGVkRGF0ZQBzZXRfcG9zdGVkRGF0ZQBnZXRfYXJjaGl2ZURhdGUA
c2V0X2FyY2hpdmVEYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdldF9zdGF0ZQBzZXRfc3RhdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBnZXRfYWN0aXZlAHNldF9hY3RpdmUAZ2V0X2hyZWYA
c2V0X2hyZWYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBnZXRfTGVuZ3RoAFNl
YXJjaExpbmsAZ2V0X3VpTGluawBzZXRfdWlMaW5rAGdldF9hZGRpdGlvbmFsSW5mb0xpbmsAc2V0
X2FkZGl0aW9uYWxJbmZvTGluawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAZ2V0X3JlbABzZXRfcmVsAGdldF9lbWFpbABzZXRfZW1haWwAU1Rf
NDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4ZGFkNTFkZmUuZGxsAERCTnVsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVj
dGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AZ2V0X3R5cGVPZlNldEFz
aWRlRGVzY3JpcHRpb24Ac2V0X3R5cGVPZlNldEFzaWRlRGVzY3JpcHRpb24AZ2V0X2Rlc2NyaXB0
aW9uAHNldF9kZXNjcmlwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ATmV3dG9uc29mdC5Kc29uAGpz
b24AQ3VsdHVyZUluZm8AZ2V0X3NvbGljaXRhdGlvbk51bWJlcgBzZXRfc29saWNpdGF0aW9uTnVt
YmVyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIASnNvbkhlbHBl
cgBTcWxQYXJhbWV0ZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAGdldF90b3RhbFJlY29yZHMAc2V0X3RvdGFsUmVjb3JkcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4
ZGFkNTFkZmUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAHNh
dmVfb3Bwb3J0dW5pdGllcwBTVF80NzIzZTc4ZTQ5NTg0YmE1OWNiMjcyNzhkYWQ1MWRmZS5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAZ2V0X3Jlc291cmNlTGlua3MAc2V0X3Jlc291
cmNlTGlua3MAc2F2ZV9saW5rcwBnZXRfbGlua3MAc2V0X2xpbmtzAFNUXzQ3MjNlNzhlNDk1ODRi
YTU5Y2IyNzI3OGRhZDUxZGZlLlNBTS5IZWxwZXJzAGdldF9QYXJhbWV0ZXJzAGNtZFBhcmFtZXRl
cnMAU3VjY2VzcwBzYXZlX29mZmljZV9hZGRlc3MAZ2V0X29mZmljZUFkZHJlc3MAc2V0X29mZmlj
ZUFkZHJlc3MAT2ZmaWNlYWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X3BvaW50T2ZD
b250YWN0AHNldF9wb2ludE9mQ29udGFjdABQb2ludG9mY29udGFjdABEZXNlcmlhbGl6ZU9iamVj
dABDb252ZXJ0VG9PYmplY3QAZ2V0X29mZnNldABzZXRfb2Zmc2V0AGdldF9saW1pdABzZXRfbGlt
aXQAZ2V0X0RlZmF1bHQAU1RfNDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4ZGFkNTFkZmUuU0FNLlJl
c3VsdABzZXRfVGFza1Jlc3VsdABPcHBvcnR1bml0eVJlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGll
bnQAZ2V0X0N1cnJlbnQASnNvbkNvbnZlcnQATW92ZU5leHQAZ2V0X2ZheABzZXRfZmF4AGdldF9B
c3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAZ2V0X2NpdHkAc2V0X2NpdHkAAACAhUMAOgBcAEEAbABs
ACAARgBpAGwAZQBzAFwATABlAGEAcgBuAGkAbgBnAFwAUwBTAEkAUwBcAG8AcABlAG4ALgBnAHMA
YQAuAGcAbwB2AFwAbwBwAGUAbgAuAGcAcwBhAC4AZwBvAHYAXABkAGEAdABhAFwAcwBhAG0ALgBq
AHMAbwBuAAA1JABQAGEAYwBrAGEAZwBlADoAOgBDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkA
bgBnAAATQABuAG8AdABpAGMAZQBJAGQAAA1AAHQAaQB0AGwAZQAAJ0AAcwBvAGwAaQBjAGkAdABh
AHQAaQBvAG4ATgB1AG0AYgBlAHIAACdAAGYAdQBsAGwAUABhAHIAZQBuAHQAUABhAHQAaABOAGEA
bQBlAAAnQABmAHUAbABsAFAAYQByAGUAbgB0AFAAYQB0AGgAQwBvAGQAZQAAF0AAcABvAHMAdABl
AGQARABhAHQAZQAAC0AAdAB5AHAAZQAAE0AAYgBhAHMAZQBUAHkAcABlAAAZQABhAHIAYwBoAGkA
dgBlAFQAeQBwAGUAABlAAGEAcgBjAGgAaQB2AGUARABhAHQAZQAANUAAdAB5AHAAZQBPAGYAUwBl
AHQAQQBzAGkAZABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAH0AAdAB5AHAAZQBPAGYAUwBlAHQA
QQBzAGkAZABlAAAjQAByAGUAcwBwAG8AbgBzAGUARABlAGEAZABMAGkAbgBlAAAVQABuAGEAaQBj
AHMAQwBvAGQAZQAAJ0AAYwBsAGEAcwBzAGkAZgBpAGMAYQB0AGkAbwBuAEMAbwBkAGUAAA9AAGEA
YwB0AGkAdgBlAAANQABhAHcAYQByAGQAABlAAGQAZQBzAGMAcgBpAHAAdABpAG8AbgAAI0AAbwBy
AGcAYQBuAGkAegBhAHQAaQBvAG4AVAB5AHAAZQAAJ0AAcABsAGEAYwBlAE8AZgBQAGUAcgBmAG8A
cgBtAGEAbgBjAGUAACdAAGEAZABkAGkAdABpAG8AbgBhAGwASQBuAGYAbwBMAGkAbgBrAAAPQAB1
AGkATABpAG4AawAAJXMAYQB2AGUAXwBvAHAAcABvAHIAdAB1AG4AaQB0AGkAZQBzAAARQAB6AGkA
cABjAG8AZABlAAALQABjAGkAdAB5AAAZQABjAG8AdQBuAHQAcgB5AEMAbwBkAGUAAA1AAHMAdABh
AHQAZQAAJ3MAYQB2AGUAXwBvAGYAZgBpAGMAZQBfAGEAZABkAHIAZQBzAHMAAAlAAGYAYQB4AAAN
QABlAG0AYQBpAGwAAA1AAHAAaABvAG4AZQAAE0AAZgB1AGwAbABOAGEAbQBlAAARcwBhAHYAZQBf
AHAAbwBjAAALQABsAGkAbgBrAAAVcwBhAHYAZQBfAGwAaQBuAGsAcwAAcVMAVABfADQANwAyADMA
ZQA3ADgAZQA0ADkANQA4ADQAYgBhADUAOQBjAGIAMgA3ADIANwA4AGQAYQBkADUAMQBkAGYAZQAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAkaNFw1ncXUuMYRP07idd
tAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERdQYHAhI9EgwDIAAOBAoBEgwFIAASgIkOBwQSTRJR
FRFVARJJEkkFIAASgI0GIAESgJEcAyAAHAYgAgEOEk0GIAEBEYCZBhUSRQESSQggABURVQETAAYV
EVUBEkkEIAATAAUgABKAnQYgARJJEkkDIAACAyAACA4HBB0SEAgSEBUSRQESSQUgAgEOHAUgAQET
AAQGEoClCAcBFRJFARJJDgcEHRIYCBIYFRJFARJJDgcEHRIcCBIcFRJFARJJBAcBHgACHgAGEAEB
HgAOBAoBHgAIAAESgLERgLUFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDMkQgwrU/msqau
7QQAAAAABAEAAAACBggEBh0SEAQGHRIgAgYOAgYcAwYRZQQGHRIYAwYSFAQGHRIcAwYdDgMGEm0D
BhJxAwYSLAMGETAFIAEBEgwKIAIBDhUSRQESSQYgAQEdEhAGIAIBEhQOByACAR0SGA4HIAIBHRIc
DgUgAB0SEAUgAB0SIAYgAQEdEiAEIAEBHAQgABFlBSABARFlBSAAHRIYBiABAR0SGAQgABIUBSAB
ARIUBSAAHRIcBiABAR0SHAQgAB0OBSABAR0OBAAAEm0EAAAScQUAAQEScQQAABIsAwAAAQMoAAgF
KAAdEhAFKAAdEiADKAAOAygAHAQoABFlBSgAHRIYBCgAEhQFKAAdEhwEKAAdDgQIABJtBAgAEnEE
CAASLAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfNDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4ZGFkNTFkZmUAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRAuTkVUIEZyYW1ld29yayA0tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAANxYAAAAAAAAAAAAAPZYAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADoWAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAA
AAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAAAAAA
ABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQD8l2Yf
AAABAPyXZh8/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJ
AG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBTAHQA
cgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBD
AG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADQANwAyADMAZQA3
ADgAZQA0ADkANQA4ADQAYgBhADUAOQBjAGIAMgA3ADIANwA4AGQAYQBkADUAMQBkAGYAZQAAAD4A
DwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADAAMwA4AC4AMwA4ADkAMAA4
AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADQANwAyADMAZQA3ADgA
ZQA0ADkANQA4ADQAYgBhADUAOQBjAGIAMgA3ADIANwA4AGQAYQBkADUAMQBkAGYAZQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANAA3ADIA
MwBlADcAOABlADQAOQA1ADgANABiAGEANQA5AGMAYgAyADcAMgA3ADgAZABhAGQANQAxAGQAZgBl
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADQANwAyADMA
ZQA3ADgAZQA0ADkANQA4ADQAYgBhADUAOQBjAGIAMgA3ADIANwA4AGQAYQBkADUAMQBkAGYAZQAA
AEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAAwADMAOAAuADMA
OAA5ADAAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAAwADMAOAAuADMAOAA5ADAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAAIOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="145"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="142"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="264"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="234"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="168"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="204"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="250"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Invoke API"
          TopLeft="295.5,31.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>