<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/2/2022 6:54:01 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SANOJ-KUMAR"
  DTS:CreatorName="SANOJ-KUMAR\Rita Tomar"
  DTS:DTSID="{B172A76E-30AB-4383-95AC-0F4E9B651A79}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="16393"
  DTS:MaxErrorCount="10"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="51"
  DTS:VersionGUID="{DEEAC056-B5D0-4E3E-A893-31A33F5079D1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{45547FFA-610E-4FF7-98A2-3F5A73644C3E}"
      DTS:ObjectName="APIKey"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">WW7ovYVmLWPHWSUR7hTuXTdOX8AxDfS0PLMOWFvZ</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C294E8A5-4156-4275-BD4F-E18984DAF9C4}"
      DTS:ObjectName="APIURL"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://api.sam.gov/opportunities/v2/search</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D7CEBA34-7827-49FA-8289-FB2238DFD3BD}"
      DTS:ObjectName="ConnectionString"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SANOJ-KUMAR\TOMAR;Initial Catalog=sam.gov;User=sa;Password=Office@357</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Invoke API"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Invoke API and get the result back"
      DTS:DTSID="{952A32C3-BE41-4E5C-88D5-180C9E4D8BD1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="10"
      DTS:ObjectName="Invoke API"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4723e78e49584ba59cb27278dad51dfe"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::APIKey,$Package::APIURL,$Package::ConnectionString">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_4723e78e49584ba59cb27278dad51dfe.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4BCE7011-2467-498F-8321-1A1019AEDB58}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4723e78e49584ba59cb27278dad51dfe</RootNamespace>
    <AssemblyName>ST_4723e78e49584ba59cb27278dad51dfe</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Net.Http.Formatting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL" />
    <Reference Include="System.Net.Http.WebRequest" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Settings.get_Default():ST_4723e78e49584ba59cb27278dad51dfe.Properties.Sett" +
    "ings")]

namespace ST_4723e78e49584ba59cb27278dad51dfe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Collections.Generic;
//using Newtonsoft.Json;
//using ST_4723e78e49584ba59cb27278dad51dfe.SAM.Helpers;
using ST_4723e78e49584ba59cb27278dad51dfe.SAM.Result;
using System.Net;
using System.IO;
using System.Text;
using System.Data.SqlClient;
using System.Web.Script.Serialization;
#endregion

namespace ST_4723e78e49584ba59cb27278dad51dfe
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                //TODO: Uncomment below commented code to connect to API

                //string serviceUrl = Dts.Variables["$Package::APIURL"].Value.ToString();
                //string APIUrl = string.Format(serviceUrl + "?limit=10&api_key={0}&postedFrom=01/01/2018&postedTo=05/10/2018&title=Driving", Dts.Variables["$Package::APIKey"].Value.ToString());

                //WebRequest request = WebRequest.Create(APIUrl);
                //request.Method = "GET";
                //request.ContentType = "application/json; charset=utf-8";
                //request.ContentLength = 0;
                //string result = "";
                //OpportunityResult data = null;
                //using (WebResponse response = request.GetResponse())
                //{
                //    Stream responseStream = response.GetResponseStream();
                //    using (StreamReader streamReader = new StreamReader(responseStream, Encoding.Default))
                //    {
                //        result = streamReader.ReadToEnd();
                //    }

                //    data = JsonHelper.ConvertToObject<OpportunityResult>(result);
                //    save_the_data(data);


                //}


                // TODO: Comment below code to disconnect local file

                using (StreamReader r = new StreamReader(@"C:\All Files\Learning\SSIS\open.gsa.gov\open.gsa.gov\data\sam.json"))
                {
                    string result = r.ReadToEnd();
                    //OpportunityResult data = JsonHelper.ConvertToObject<OpportunityResult>(result);

                    JavaScriptSerializer serialize = new JavaScriptSerializer();
                    OpportunityResult data = (OpportunityResult)serialize.Deserialize(result, typeof(OpportunityResult));

                    // save_the_data(data);
                }


                Dts.TaskResult = (int)ScriptResults.Success;

            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        private void save_the_data(OpportunityResult data)
        {
            save_opportunities(data.opportunitiesData);
        }

        private void save_into_db(string storedProcedure, List<SqlParameter> cmdParameters)
        {
            using (SqlConnection con = new SqlConnection(Dts.Variables["$Package::ConnectionString"].Value.ToString()))
            {
                using (SqlCommand cmd = new SqlCommand(storedProcedure, con))
                {
                    cmd.CommandType = CommandType.StoredProcedure;

                    foreach (var param in cmdParameters)
                    {
                        cmd.Parameters.Add(param);
                    }
                    con.Open();
                    cmd.ExecuteNonQuery();
                }
            }
        }

     private void save_opportunities(Opportunitiesdata[] opportunitiesData)
        {
            if(opportunitiesData != null && opportunitiesData.Length >0)
            {
                foreach (var item in opportunitiesData)
                {
                    List<SqlParameter> cmdParameters = new List<SqlParameter>();
                    cmdParameters.Add(new SqlParameter("@noticeId", item.noticeId));
                    cmdParameters.Add(new SqlParameter("@title", (object)item.title ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@solicitationNumber", (object)item.solicitationNumber ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@fullParentPathName", (object)item.fullParentPathName ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@fullParentPathCode", (object)item.fullParentPathCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@postedDate", (object)item.postedDate ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@type", (object)item.type ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@baseType", (object)item.baseType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@archiveType", (object)item.archiveType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@archiveDate", (object)item.archiveDate ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@typeOfSetAsideDescription", (object)item.typeOfSetAsideDescription ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@typeOfSetAside", (object)item.typeOfSetAside ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@responseDeadLine", (object)item.responseDeadLine ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@naicsCode", (object)item.naicsCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@classificationCode", (object)item.classificationCode ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@active", (object)item.active ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@award", (object)item.award ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@description", (object)item.description ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@organizationType", (object)item.organizationType ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@placeOfPerformance", (object)item.placeOfPerformance ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@additionalInfoLink", (object)item.additionalInfoLink ?? DBNull.Value));
                    cmdParameters.Add(new SqlParameter("@uiLink", (object)item.uiLink ?? DBNull.Value));

                    save_into_db("save_opportunities", cmdParameters);


                    if (item.officeAddress != null)
                    {
                        save_office_addess(item.officeAddress, item.noticeId);
                    }

                    if (item.pointOfContact != null && item.pointOfContact.Length > 0)
                    {
                        save_poc(item.pointOfContact, item.noticeId);
                    }

                    if (item.links != null && item.links.Length > 0)
                    {
                        save_links(item.links, item.noticeId);
                    }

                }
            }
        }

        private void save_office_addess(Officeaddress officeAddress, string noticeId)
        {
            List<SqlParameter> cmdParameters = new List<SqlParameter>();
            cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
            cmdParameters.Add(new SqlParameter("@zipcode", (object)officeAddress.zipcode ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@city", (object)officeAddress.city ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@countryCode", (object)officeAddress.countryCode ?? DBNull.Value));
            cmdParameters.Add(new SqlParameter("@state", (object)officeAddress.state ?? DBNull.Value));
            save_into_db("save_office_address", cmdParameters);
        }

        private void save_poc(Pointofcontact[] pointOfContact, string noticeId)
        {
            foreach (var item in pointOfContact)
            {
                List<SqlParameter> cmdParameters = new List<SqlParameter>();
                cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
                cmdParameters.Add(new SqlParameter("@fax", (object)item.fax ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@type", (object)item.type ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@email", (object)item.email ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@phone", (object)item.phone ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@title", (object)item.title ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@fullName", (object)item.fullName ?? DBNull.Value));

                save_into_db("save_poc", cmdParameters);
            }

        }

        private void save_links(Link[] links, string noticeId)
        {
            foreach (var item in links)
            {
                List<SqlParameter> cmdParameters = new List<SqlParameter>();
                cmdParameters.Add(new SqlParameter("@noticeId", noticeId));
                cmdParameters.Add(new SqlParameter("@type", (object)item.rel ?? DBNull.Value));
                cmdParameters.Add(new SqlParameter("@link", (object)item.href ?? DBNull.Value));

                save_into_db("save_links", cmdParameters);
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }


    namespace SAM.Helpers
    {
        /// <summary>
        /// JSON serializer
        /// </summary>
        public static class JsonHelper
        {

            /// <summary>
            /// Convert JSON to object
            /// </summary>
            /// <typeparam name="T">JSON</typeparam>
            /// <param name="json"></param>
            /// <returns>Object</returns>
            public static T ConvertToObject<T>(string json) where T : class, new()
            {
                T obj = null;

                if (json != null && json.Length > 0)
                {
                    try
                    {
                        obj = null;// JsonConvert.DeserializeObject<T>(json);
                    }
                    catch
                    {
                        obj = null;
                    }
                }

                return obj;
            }
        }
    }

    namespace SAM.Result
    {
        public class OpportunityResult
        {
            public int totalRecords { get; set; }
            public int limit { get; set; }
            public int offset { get; set; }
            public Opportunitiesdata[] opportunitiesData { get; set; }
            public SearchLink[] links { get; set; }
        }

        public class Opportunitiesdata
        {
            public string noticeId { get; set; }
            public string title { get; set; }
            public string solicitationNumber { get; set; }
            public string fullParentPathName { get; set; }
            public string fullParentPathCode { get; set; }
            public string postedDate { get; set; }
            public string type { get; set; }
            public string baseType { get; set; }
            public string archiveType { get; set; }
            public object archiveDate { get; set; }
            public object typeOfSetAsideDescription { get; set; }
            public object typeOfSetAside { get; set; }
            public DateTime responseDeadLine { get; set; }
            public string naicsCode { get; set; }
            public string classificationCode { get; set; }
            public string active { get; set; }
            public object award { get; set; }
            public Pointofcontact[] pointOfContact { get; set; }
            public string description { get; set; }
            public string organizationType { get; set; }
            public Officeaddress officeAddress { get; set; }
            public object placeOfPerformance { get; set; }
            public object additionalInfoLink { get; set; }
            public string uiLink { get; set; }
            public Link[] links { get; set; }
            public string[] resourceLinks { get; set; }
        }

        public class Officeaddress
        {
            public string zipcode { get; set; }
            public string city { get; set; }
            public string countryCode { get; set; }
            public string state { get; set; }
        }

        public class Pointofcontact
        {
            public object fax { get; set; }
            public string type { get; set; }
            public string email { get; set; }
            public string phone { get; set; }
            public object title { get; set; }
            public string fullName { get; set; }
        }

        public class Link
        {
            public string rel { get; set; }
            public string href { get; set; }
        }

        public class SearchLink
        {
            public string rel { get; set; }
            public string href { get; set; }
        }

    }

}]]></ProjectItem>
          <ProjectItem
            Name="app.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4723e78e49584ba59cb27278dad51dfe</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4723e78e49584ba59cb27278dad51dfe</msb:DisplayName>
		<msb:ProjectId>{A0C7C505-794D-41C6-B2F9-C44BD564D440}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4723e78e49584ba59cb27278dad51dfe.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="app.config"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="05f4e672f78f4f10a283b468c880e7a2">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>149</msb:LineNumber>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="5a33286a32d44ebf9c2b3211ed132ca0">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>268</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="c63414ded7a04e2cbb5d69046db0cec6">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>146</msb:LineNumber>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="33ae4d5389f44b6bbf234acf72534cb9">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>238</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="1aa36fb82cdf4d61abdc7a98d3d20ea0">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>172</msb:LineNumber>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="f621f0b40a70471d83867f529a4e5896">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>208</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="8128ac37b13d44a4aa66b581927d7de8">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>254</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="6a33a9a4431944f3b1fe9b383eaebe81">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:LineNumber>136</msb:LineNumber>
			<msb:ColumnNumber>21</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4723e78e49584ba59cb27278dad51dfe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4723e78e49584ba59cb27278dad51dfe")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4723e78e49584ba59cb27278dad51dfe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4723e78e49584ba59cb27278dad51dfe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4723e78e49584ba59cb27278dad51dfe.dll">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
BgBMCTkOBgDhDY4OBgCLDZQMEgAICeULEgB9CeULEgCqCH8MBgDSDREAFgAJDqkMBgA3CFcMBgDh
BlcMBgDVBlcMCgDTC6oLGgA3D2oHGgDMBmoHDgBrBXMNDgDMB0QADgDbDB4RDgDyDHMNBgBHDFcM
BgAqC1cMBgBdEckMAAAAAAgAAAAAAAEAAQABABAAdAyoBjkAAQABAAEAEAAMEc4QXQABAAkAAQAQ
AIoAzhBdAAYAFAABABAALxDOEF0AIABJAAEAEAB5EM4QXQAkAFIAAQAQAIYLzhBdACoAXwABABAA
PAvOEF0ALABkAIEBEADxDaMPXQAuAGkAAAAQAJUOBA9dAC4AagAAARAAQQ8ED30AMABuAAMBAABF
EAAAWQAxAHEAAQB0BB0BAQAfBR0BAQAHBR0BAQD0ACABAQCxBCUBAQAXASoBAQAlAioBAQBQBCoB
AQA8AioBAQCMASoBAQAiAyoBAQAMAyoBAQCzAioBAQDNAioBAQA+Ay0BAQAIBC0BAQBsAS0BAQB6
AjABAQDUASoBAQCwASoBAQByAyoBAQAxAS0BAQDnBDQBAQAzBCoBAQDqAioBAQDIBDkBAQBIAS0B
AQC4Ay0BAQCgAyoBAQCxBD0BAQCSBEIBAQAMAioBAQBLBSoBAQDvASoBAQBbAyoBAQA2BS0BAQAM
AyoBAQDxAyoBAQCcAioBAQAlAi0BAQBgAioBAQDcAyoBAQCKAyoBAQDcAyoBAQCKAyoBEQBjDEYB
EQB+CEoBEQDCBU4BBgY8AB0BVoDwD1IBVoBeCFIBUCAAAAAAhgB6DAYAAQDQIAAAAACBAHwAVgEB
AOAgAAAAAIEAnABcAQIApCEAAAAAgQDxDmcBBADwJAAAAACBAPgPbgEFAJwlAAAAAIEAzQB1AQcA
oCYAAAAAgQBuD30BCQAiJwAAAACGGCwOBgALAConAAAAAIYITA6XAAsAMicAAAAAhghdDgEACwA7
JwAAAACGCK4QlwAMAEMnAAAAAIYIuBABAAwATCcAAAAAhgiYEJcADQBUJwAAAACGCKMQAQANAF0n
AAAAAIYIUACFAQ4AZScAAAAAhghmAGcBDgBuJwAAAACGCHkPiwEPAHYnAAAAAIYIgw+RAQ8AfycA
AAAAhhgsDgYAEACHJwAAAACGCNYAIQAQAI8nAAAAAIYI4wAQABAAmCcAAAAAhggFByEAEQCgJwAA
AACGCA8HEAARAKknAAAAAIYIlw0hABIAsScAAAAAhgiuDRAAEgC6JwAAAACGCBkHIQATAMInAAAA
AIYIMAcQABMAyycAAAAAhgj4BSEAFADTJwAAAACGCA8GEAAUANwnAAAAAIYIygghABUA5CcAAAAA
hgjZCBAAFQDtJwAAAACGCDwIIQAWAPUnAAAAAIYIRQgQABYA/icAAAAAhgjYByEAFwAGKAAAAACG
COUHEAAXAA8oAAAAAIYI8gchABgAFygAAAAAhggCCBAAGAAgKAAAAACGCOgIWAAZACgoAAAAAIYI
+AiYARkAMSgAAAAAhggXDVgAGgA5KAAAAACGCDUNmAEaAEIoAAAAAIYI0gVYABsASigAAAAAhgjl
BZgBGwBTKAAAAACGCIoHnQEcAFsoAAAAAIYInweiARwAZCgAAAAAhghUBiEAHQBsKAAAAACGCGIG
EAAdAHUoAAAAAIYIJgYhAB4AfSgAAAAAhgg9BhAAHgCGKAAAAACGCNoKIQAfAI4oAAAAAIYI5QoQ
AB8AlygAAAAAhgiABVgAIACfKAAAAACGCIoFmAEgAKgoAAAAAIYIUxCoASEAsCgAAAAAhghmEK4B
IQC5KAAAAACGCFMNIQAiAMEoAAAAAIYIYw0QACIAyigAAAAAhggSCCEAIwDSKAAAAACGCCcIEAAj
ANsoAAAAAIYICxC1ASQA4ygAAAAAhggdELoBJADsKAAAAACGCJQFWAAlAPQoAAAAAIYIqwWYASUA
/SgAAAAAhghdC1gAJgAFKQAAAACGCHQLmAEmAA4pAAAAAIYIRwshACcAFikAAAAAhghSCxAAJwAf
KQAAAACGCHkPwAEoACcpAAAAAIYIgw/GASgAMCkAAAAAhghKD80BKQA4KQAAAACGCFwP0gEpAH8n
AAAAAIYYLA4GACoAQSkAAAAAhgiQBiEAKgBJKQAAAACGCJwGEAAqAFIpAAAAAIYIdhEhACsAWikA
AAAAhgh/ERAAKwBjKQAAAACGCHAGIQAsAGspAAAAAIYIgAYQACwAdCkAAAAAhggdCSEALQB8KQAA
AACGCCcJEAAtAH8nAAAAAIYYLA4GAC4AhSkAAAAAhghJEVgALgCNKQAAAACGCFERmAEuAJYpAAAA
AIYIPAghAC8AnikAAAAAhghFCBAALwCnKQAAAACGCAsMIQAwAK8pAAAAAIYIFQwQADAAuCkAAAAA
hgi0ByEAMQDAKQAAAACGCL4HEAAxAMkpAAAAAIYIBQdYADIA0SkAAAAAhggPB5gBMgDaKQAAAACG
CEcHIQAzAOIpAAAAAIYIVAcQADMAfycAAAAAhhgsDgYANADrKQAAAACGCPsLIQA0APMpAAAAAIYI
AwwQADQA/CkAAAAAhgj8CiEANQAEKgAAAACGCAULEAA1AH8nAAAAAIYYLA4GADYADSoAAAAAhgj7
CyEANgAVKgAAAACGCAMMEAA2AB4qAAAAAIYI/AohADcAJioAAAAAhggFCxAANwB/JwAAAACGGCwO
BgA4ADAqAAAAAJYAiBDYATgAfycAAAAAgxgsDgYAOQB4KgAAAACTCN0N3wE5AKQqAAAAAJMIZgjk
ATkAqyoAAAAAkwhyCOkBOQCzKgAAAACWCMIQ7wE6ALoqAAAAAIYYLA4GADoAwioAAAAAkRgyDvQB
OgAAAAEAlwAAAAEATggAAAIA4g8AAAEAagAAAAEAIRAAAAIA5wAAAAEAahAAAAIA5wAAAAEAhw8A
AAIA5wAAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA
1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoA
AAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA
1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoA
AAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEA1AoAAAEAhg0AAAEA
1AoJACwOAQARACwOBgAZACwOCgApACwOEAAxACwOEAA5ACwOEABBACwOEABJACwOEABRACwOEABZ
ACwOEABhACwOEABpACwOBgDBACwOBgDRACwOBgDxACwOFQB5ACwOEAABAWEFIQAJASwOBgARAfMG
JQAJAfAKLgAhAcIIBgBxAD0QNgApAf0QAQApATMPSwAxAU4MUQA5AcoKWAC5ACgLIQCZACwOEACh
ACwOXABBAcgHYwAMAB4OcQAUADQRgQChANMPhgBRAfAAjAAUAEARkwBZAW8MBgBBAWYRlwAMACwO
BgCRACwOqgAMAPAAsABhAc4KtgBxACwOBgC5ACwOBgBpATELlwARAVkR6gDZACwO8AD5ACwOBgAI
AMgAEwEIAMwAGAEhAGsAGAEuAAsAOgIuABMAQwIuABsAYgIuACMAawIuACsAlAIuADMAlAIuADsA
lAIuAEMAawIuAEsAmgIuAFMAlAIuAFsAsQJBAGsAGAFDAGMAGAFhAGsAGAGBAGsAGAGhAGsAGAHB
AGsAGAHhAGsAGAEBAWsAGAEgAWsAGAEhAWsAGAFAAWsAGAFBAWsAGAFDAXMAGAFgAWsAGAFhAWsA
GAGAAWsAGAGBAWsAGAGgAWsAGAGhAWsAGAHAAWsAGAHBAWsAGAHgAWsAGAHhAWsAGAEAAmsAGAEB
AmsAGAEgAmsAGAEhAmsAGAFAAmsAGAFBAmsAGAFhAmsAGAGAAmsAGAGBAmsAGAGgAmsAGAGhAmsA
GAHAAmsAGAHBAmsAGAHgAmsAGAHhAmsAGAEAA2sAGAEBA2sAGAEgA2sAGAEhA2sAGAFAA2sAGAFB
A2sAGAFgA2sAGAFhA2sAGAGAA2sAGAGBA2sAGAGgA2sAGAGhA2sAGAHAA2sAGAHBA2sAGAHgA2sA
GAHhA2sAGAEABGsAGAEBBGsAGAEgBGsAGAEhBGsAGAFABGsAGAFBBGsAGAFgBGsAGAFhBGsAGAGA
BGsAGAGBBGsAGAGgBGsAGAGhBGsAGAHABGsAGAHBBGsAGAHgBGsAGAHhBGsAGAEABWsAGAEBBWsA
GAEgBWsAGAEhBWsAGAFABWsAGAFBBWsAGAFgBWsAGAFhBWsAGAGABWsAGAGBBWsAGAGgBWsAGAGh
BWsAGAHABWsAGAHJBXsAYgLgBWsAGAHpBXsAYgIABmsAGAEBBmsAGAEgBmsAGAFABmsAGAFgBmsA
GAGABmsAGAGgBmsAGAHABmsAGAHgBmsAGAEAB2sAGAEgB2sAGAFAB2sAGAFgB2sAGAGAB2sAGAGg
B2sAGAHAB2sAGAHgB2sAGAEACGsAGAEgCGsAGAFACGsAGAFgCGsAGAGACGsAGAGgCGsAGAHACGsA
GAHgCGsAGAEgCWsAGAFACWsAGAFgCWsAGAGACWsAGAGgCWsAGAHACWsAGAHgCWsAGAEACmsAGAFA
CmsAGAFgCmsAGAGACmsAGAGgCmsAGAHACmsAGAHgCmsAGAEAC2sAGAEgC2sAGAFAC2sAGAFgC2sA
GAGAC2sAGAGgC2sAGAHgC2sAGAEADGsAGAEgDGsAGAFADGsAGAGADGsAGAGgDGsAGAHADGsAGAHg
DGsAGAEbADwAmwC7AMQA0wDiAAMAAQAEAAYABQAgAAYAJAAHACoACAAsAAoALgALADAAAABhDvgB
AAC8EPgBAACnEPgBAABqAPwBAACHDwICAADnAAgCAAATBwgCAACyDQgCAAA0BwgCAAATBggCAADd
CAgCAABJCAgCAADpBwgCAAAGCAgCAAD8CAwCAAA5DQwCAADpBQwCAACjBxACAABmBggCAABBBggC
AADpCggCAACOBQwCAABqEBUCAABnDQgCAAArCAgCAAAhEBsCAACvBQwCAAB4CwwCAABWCwgCAACH
DyACAABgDyYCAACgBggCAACDEQgCAACEBggCAAArCQgCAABVEQwCAABJCAgCAAAZDAgCAADCBwgC
AAATBwwCAABYBwgCAAAHDAgCAAAJCwgCAAAHDAgCAAAJCwgCAADhDSsCAACGCDACAADGEDUCAgAJ
AAMAAQAKAAMAAgALAAUAAQAMAAUAAgANAAcAAQAOAAcAAgAPAAkAAQAQAAkAAgARAAsAAQASAAsA
AgAUAA0AAQAVAA0AAgAWAA8AAQAXAA8AAgAYABEAAQAZABEAAgAaABMAAQAbABMAAgAcABUAAQAd
ABUAAgAeABcAAQAfABcAAgAgABkAAQAhABkAAgAiABsAAQAjABsAAgAkAB0AAQAlAB0AAgAmAB8A
AQAnAB8AAgAoACEAAQApACEAAgAqACMAAQArACMAAgAsACUAAQAtACUAAgAuACcAAQAvACcAAgAw
ACkAAQAxACkAAgAyACsAAQAzACsAAgA0AC0AAQA1AC0AAgA2AC8AAQA3AC8AAgA4ADEAAQA5ADEA
AgA6ADMAAQA7ADMAAgA8ADUAAQA9ADUAAgA+ADcAAQA/ADcAAgBAADkAAQBBADkAAgBCADsAAQBD
ADsAAgBEAD0AAQBFAD0AAgBGAD8AAQBHAD8AAgBJAEEAAQBKAEEAAgBLAEMAAQBMAEMAAgBNAEUA
AQBOAEUAAgBPAEcAAQBQAEcAAgBSAEkAAQBTAEkAAgBUAEsAAQBVAEsAAgBWAE0AAQBXAE0AAgBY
AE8AAQBZAE8AAgBaAFEAAQBbAFEAAgBcAFMAAQBdAFMAAgBfAFUAAQBgAFUAAgBhAFcAAQBiAFcA
AgBkAFkAAQBlAFkAAgBmAFsAAQBnAFsAAgBrAF0AAgBsAF8AAQBtAF8AAgBuAGEAagB6AOcABIAA
AAEAAACNH01iAAAAAAAAqAYAAAQAAAAAAAAAAAAAAPgAqQAAAAAACwAAAAAAAAAAAAAAAQGLCwAA
AAAEAAAAAAAAAAAAAAD4AEQAAAAAAAQAAAAAAAAAAAAAAPgAVwwAAAAABAAAAAAAAAAAAAAACgGN
DwAAAAALAAAAAAAAAAAAAAABARsAAAAAAAAAAAABAAAAnw4AAAwAAgAAABQA0wA6AAAAAAAATGlz
dGAxADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAVAB2
YWx1ZV9fAFN5c3RlbS5EYXRhAGdldF9vcHBvcnR1bml0aWVzRGF0YQBzZXRfb3Bwb3J0dW5pdGll
c0RhdGEAc2F2ZV90aGVfZGF0YQBPcHBvcnR1bml0aWVzZGF0YQBzYXZlX2ludG9fZGIAbXNjb3Js
aWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAc2F2ZV9wb2MAZ2V0X25vdGljZUlkAHNldF9u
b3RpY2VJZABBZGQAPG9wcG9ydHVuaXRpZXNEYXRhPmtfX0JhY2tpbmdGaWVsZAA8bm90aWNlSWQ+
a19fQmFja2luZ0ZpZWxkADxhd2FyZD5rX19CYWNraW5nRmllbGQAPHBsYWNlT2ZQZXJmb3JtYW5j
ZT5rX19CYWNraW5nRmllbGQAPHR5cGVPZlNldEFzaWRlPmtfX0JhY2tpbmdGaWVsZAA8ZnVsbFBh
cmVudFBhdGhDb2RlPmtfX0JhY2tpbmdGaWVsZAA8Y2xhc3NpZmljYXRpb25Db2RlPmtfX0JhY2tp
bmdGaWVsZAA8bmFpY3NDb2RlPmtfX0JhY2tpbmdGaWVsZAA8Y291bnRyeUNvZGU+a19fQmFja2lu
Z0ZpZWxkADx6aXBjb2RlPmtfX0JhY2tpbmdGaWVsZAA8dGl0bGU+a19fQmFja2luZ0ZpZWxkADxm
dWxsUGFyZW50UGF0aE5hbWU+a19fQmFja2luZ0ZpZWxkADxmdWxsTmFtZT5rX19CYWNraW5nRmll
bGQAPHJlc3BvbnNlRGVhZExpbmU+a19fQmFja2luZ0ZpZWxkADxwaG9uZT5rX19CYWNraW5nRmll
bGQAPGJhc2VUeXBlPmtfX0JhY2tpbmdGaWVsZAA8YXJjaGl2ZVR5cGU+a19fQmFja2luZ0ZpZWxk
ADxvcmdhbml6YXRpb25UeXBlPmtfX0JhY2tpbmdGaWVsZAA8dHlwZT5rX19CYWNraW5nRmllbGQA
PHBvc3RlZERhdGU+a19fQmFja2luZ0ZpZWxkADxhcmNoaXZlRGF0ZT5rX19CYWNraW5nRmllbGQA
PHN0YXRlPmtfX0JhY2tpbmdGaWVsZAA8YWN0aXZlPmtfX0JhY2tpbmdGaWVsZAA8aHJlZj5rX19C
YWNraW5nRmllbGQAPHVpTGluaz5rX19CYWNraW5nRmllbGQAPGFkZGl0aW9uYWxJbmZvTGluaz5r
X19CYWNraW5nRmllbGQAPHJlbD5rX19CYWNraW5nRmllbGQAPGVtYWlsPmtfX0JhY2tpbmdGaWVs
ZAA8dHlwZU9mU2V0QXNpZGVEZXNjcmlwdGlvbj5rX19CYWNraW5nRmllbGQAPGRlc2NyaXB0aW9u
PmtfX0JhY2tpbmdGaWVsZAA8c29saWNpdGF0aW9uTnVtYmVyPmtfX0JhY2tpbmdGaWVsZAA8dG90
YWxSZWNvcmRzPmtfX0JhY2tpbmdGaWVsZAA8cmVzb3VyY2VMaW5rcz5rX19CYWNraW5nRmllbGQA
PGxpbmtzPmtfX0JhY2tpbmdGaWVsZAA8b2ZmaWNlQWRkcmVzcz5rX19CYWNraW5nRmllbGQAPHBv
aW50T2ZDb250YWN0PmtfX0JhY2tpbmdGaWVsZAA8b2Zmc2V0PmtfX0JhY2tpbmdGaWVsZAA8bGlt
aXQ+a19fQmFja2luZ0ZpZWxkADxmYXg+a19fQmFja2luZ0ZpZWxkADxjaXR5PmtfX0JhY2tpbmdG
aWVsZABSZWFkVG9FbmQARGJDb21tYW5kAFNxbENvbW1hbmQAZ2V0X2F3YXJkAHNldF9hd2FyZABn
ZXRfcGxhY2VPZlBlcmZvcm1hbmNlAHNldF9wbGFjZU9mUGVyZm9ybWFuY2UAZGVmYXVsdEluc3Rh
bmNlAGdldF90eXBlT2ZTZXRBc2lkZQBzZXRfdHlwZU9mU2V0QXNpZGUAZ2V0X2Z1bGxQYXJlbnRQ
YXRoQ29kZQBzZXRfZnVsbFBhcmVudFBhdGhDb2RlAGdldF9jbGFzc2lmaWNhdGlvbkNvZGUAc2V0
X2NsYXNzaWZpY2F0aW9uQ29kZQBnZXRfbmFpY3NDb2RlAHNldF9uYWljc0NvZGUAZ2V0X2NvdW50
cnlDb2RlAHNldF9jb3VudHJ5Q29kZQBnZXRfemlwY29kZQBzZXRfemlwY29kZQBTVF80NzIzZTc4
ZTQ5NTg0YmE1OWNiMjcyNzhkYWQ1MWRmZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfdGl0bGUAc2V0X3RpdGxlAGdldF9mdWxsUGFy
ZW50UGF0aE5hbWUAc2V0X2Z1bGxQYXJlbnRQYXRoTmFtZQBnZXRfZnVsbE5hbWUAc2V0X2Z1bGxO
YW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAZ2V0X3Jlc3BvbnNl
RGVhZExpbmUAc2V0X3Jlc3BvbnNlRGVhZExpbmUAZ2V0X3Bob25lAHNldF9waG9uZQBzZXRfQ29t
bWFuZFR5cGUAZ2V0X2Jhc2VUeXBlAHNldF9iYXNlVHlwZQBnZXRfYXJjaGl2ZVR5cGUAc2V0X2Fy
Y2hpdmVUeXBlAGdldF9vcmdhbml6YXRpb25UeXBlAHNldF9vcmdhbml6YXRpb25UeXBlAGdldF90
eXBlAHNldF90eXBlAHN0b3JlZFByb2NlZHVyZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARGlzcG9zZQBnZXRfcG9zdGVkRGF0ZQBzZXRfcG9zdGVkRGF0ZQBnZXRf
YXJjaGl2ZURhdGUAc2V0X2FyY2hpdmVEYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdldF9zdGF0
ZQBzZXRfc3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBnZXRfYWN0aXZlAHNldF9hY3Rp
dmUARGVzZXJpYWxpemUAZ2V0X2hyZWYAc2V0X2hyZWYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBUb1N0cmluZwBnZXRfTGVuZ3RoAFNlYXJjaExpbmsAZ2V0X3VpTGluawBzZXRfdWlMaW5rAGdl
dF9hZGRpdGlvbmFsSW5mb0xpbmsAc2V0X2FkZGl0aW9uYWxJbmZvTGluawBNaWNyb3NvZnQuU3Fs
U2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFz
awBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAZ2V0X3JlbABzZXRfcmVs
AGdldF9lbWFpbABzZXRfZW1haWwAU1RfNDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4ZGFkNTFkZmUu
ZGxsAERCTnVsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLldlYi5T
Y3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0
aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBnZXRfdHlwZU9mU2V0QXNp
ZGVEZXNjcmlwdGlvbgBzZXRfdHlwZU9mU2V0QXNpZGVEZXNjcmlwdGlvbgBnZXRfZGVzY3JpcHRp
b24Ac2V0X2Rlc2NyaXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBqc29uAEN1bHR1cmVJbmZvAGdl
dF9zb2xpY2l0YXRpb25OdW1iZXIAc2V0X3NvbGljaXRhdGlvbk51bWJlcgBTdHJlYW1SZWFkZXIA
VGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEpzb25IZWxwZXIAU3FsUGFyYW1ldGVyAEph
dmFTY3JpcHRTZXJpYWxpemVyAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBnZXRfdG90YWxSZWNvcmRzAHNldF90b3RhbFJlY29yZHMAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQ3MjNlNzhlNDk1ODRiYTU5Y2Iy
NzI3OGRhZDUxZGZlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBzYXZlX29wcG9ydHVuaXRpZXMAU1RfNDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4ZGFkNTFkZmUu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAGdldF9yZXNvdXJjZUxpbmtzAHNldF9y
ZXNvdXJjZUxpbmtzAHNhdmVfbGlua3MAZ2V0X2xpbmtzAHNldF9saW5rcwBTeXN0ZW0uV2ViLkV4
dGVuc2lvbnMAU1RfNDcyM2U3OGU0OTU4NGJhNTljYjI3Mjc4ZGFkNTFkZmUuU0FNLkhlbHBlcnMA
Z2V0X1BhcmFtZXRlcnMAY21kUGFyYW1ldGVycwBTdWNjZXNzAHNhdmVfb2ZmaWNlX2FkZGVzcwBn
ZXRfb2ZmaWNlQWRkcmVzcwBzZXRfb2ZmaWNlQWRkcmVzcwBPZmZpY2VhZGRyZXNzAGdldF9EdHMA
U2NyaXB0UmVzdWx0cwBnZXRfcG9pbnRPZkNvbnRhY3QAc2V0X3BvaW50T2ZDb250YWN0AFBvaW50
b2Zjb250YWN0AENvbnZlcnRUb09iamVjdABnZXRfb2Zmc2V0AHNldF9vZmZzZXQAZ2V0X2xpbWl0
AHNldF9saW1pdABnZXRfRGVmYXVsdABTVF80NzIzZTc4ZTQ5NTg0YmE1OWNiMjcyNzhkYWQ1MWRm
ZS5TQU0uUmVzdWx0AHNldF9UYXNrUmVzdWx0AE9wcG9ydHVuaXR5UmVzdWx0AFN5c3RlbS5EYXRh
LlNxbENsaWVudABnZXRfQ3VycmVudABNb3ZlTmV4dABnZXRfZmF4AHNldF9mYXgAZ2V0X0Fzc2Vt
Ymx5AEV4ZWN1dGVOb25RdWVyeQBnZXRfY2l0eQBzZXRfY2l0eQAAgIVDADoAXABBAGwAbAAgAEYA
aQBsAGUAcwBcAEwAZQBhAHIAbgBpAG4AZwBcAFMAUwBJAFMAXABvAHAAZQBuAC4AZwBzAGEALgBn
AG8AdgBcAG8AcABlAG4ALgBnAHMAYQAuAGcAbwB2AFwAZABhAHQAYQBcAHMAYQBtAC4AagBzAG8A
bgAANSQAUABhAGMAawBhAGcAZQA6ADoAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAA
E0AAbgBvAHQAaQBjAGUASQBkAAANQAB0AGkAdABsAGUAACdAAHMAbwBsAGkAYwBpAHQAYQB0AGkA
bwBuAE4AdQBtAGIAZQByAAAnQABmAHUAbABsAFAAYQByAGUAbgB0AFAAYQB0AGgATgBhAG0AZQAA
J0AAZgB1AGwAbABQAGEAcgBlAG4AdABQAGEAdABoAEMAbwBkAGUAABdAAHAAbwBzAHQAZQBkAEQA
YQB0AGUAAAtAAHQAeQBwAGUAABNAAGIAYQBzAGUAVAB5AHAAZQAAGUAAYQByAGMAaABpAHYAZQBU
AHkAcABlAAAZQABhAHIAYwBoAGkAdgBlAEQAYQB0AGUAADVAAHQAeQBwAGUATwBmAFMAZQB0AEEA
cwBpAGQAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAB9AAHQAeQBwAGUATwBmAFMAZQB0AEEAcwBp
AGQAZQAAI0AAcgBlAHMAcABvAG4AcwBlAEQAZQBhAGQATABpAG4AZQAAFUAAbgBhAGkAYwBzAEMA
bwBkAGUAACdAAGMAbABhAHMAcwBpAGYAaQBjAGEAdABpAG8AbgBDAG8AZABlAAAPQABhAGMAdABp
AHYAZQAADUAAYQB3AGEAcgBkAAAZQABkAGUAcwBjAHIAaQBwAHQAaQBvAG4AACNAAG8AcgBnAGEA
bgBpAHoAYQB0AGkAbwBuAFQAeQBwAGUAACdAAHAAbABhAGMAZQBPAGYAUABlAHIAZgBvAHIAbQBh
AG4AYwBlAAAnQABhAGQAZABpAHQAaQBvAG4AYQBsAEkAbgBmAG8ATABpAG4AawAAD0AAdQBpAEwA
aQBuAGsAACVzAGEAdgBlAF8AbwBwAHAAbwByAHQAdQBuAGkAdABpAGUAcwAAEUAAegBpAHAAYwBv
AGQAZQAAC0AAYwBpAHQAeQAAGUAAYwBvAHUAbgB0AHIAeQBDAG8AZABlAAANQABzAHQAYQB0AGUA
ACdzAGEAdgBlAF8AbwBmAGYAaQBjAGUAXwBhAGQAZAByAGUAcwBzAAAJQABmAGEAeAAADUAAZQBt
AGEAaQBsAAANQABwAGgAbwBuAGUAABNAAGYAdQBsAGwATgBhAG0AZQAAEXMAYQB2AGUAXwBwAG8A
YwAAC0AAbABpAG4AawAAFXMAYQB2AGUAXwBsAGkAbgBrAHMAAHFTAFQAXwA0ADcAMgAzAGUANwA4
AGUANAA5ADUAOAA0AGIAYQA1ADkAYwBiADIANwAyADcAOABkAGEAZAA1ADEAZABmAGUALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAJbD0VSlErVOpwnkP5MGE8EABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEXUFBwISPQ4DIAAOCAABEoCJEYCNByACHA4SgIkFIAASgJUO
BwQSTRJRFRFVARJJEkkFIAASgJkGIAESgJ0cAyAAHAYgAgEOEk0GIAEBEYClBhUSRQESSQggABUR
VQETAAYVEVUBEkkEIAATAAUgABKAqQYgARJJEkkDIAACAyAACA4HBB0SEAgSEBUSRQESSQUgAgEO
HAUgAQETAAQGEoCxCAcBFRJFARJJDgcEHRIYCBIYFRJFARJJDgcEHRIcCBIcFRJFARJJBAcBHgAC
HgAFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDMkQgxvzhWrTZONQQAAAAABAEAAAACBggE
Bh0SEAQGHRIgAgYOAgYcAwYRZQQGHRIYAwYSFAQGHRIcAwYdDgMGEm0DBhJxAwYSLAMGETAFIAEB
EgwKIAIBDhUSRQESSQYgAQEdEhAGIAIBEhQOByACAR0SGA4HIAIBHRIcDgUgAB0SEAUgAB0SIAYg
AQEdEiAEIAEBHAQgABFlBSABARFlBSAAHRIYBiABAR0SGAQgABIUBSABARIUBSAAHRIcBiABAR0S
HAQgAB0OBSABAR0OBhABAR4ADgQAABJtBAAAEnEFAAEBEnEEAAASLAMAAAEDKAAIBSgAHRIQBSgA
HRIgAygADgMoABwEKAARZQUoAB0SGAQoABIUBSgAHRIcBCgAHQ4ECAASbQQIABJxBAgAEiwIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzQ3MjNl
NzhlNDk1ODRiYTU5Y2IyNzI3OGRhZDUxZGZlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIA
AEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQ
Lk5FVCBGcmFtZXdvcmsgNAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAQWQAAAAAAAAAAAAAqWQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAHFkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAA
AAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAAAAAA
ABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQBNYo0f
AAABAE1ijR8/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJ
AG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBTAHQA
cgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBD
AG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADQANwAyADMAZQA3
ADgAZQA0ADkANQA4ADQAYgBhADUAOQBjAGIAMgA3ADIANwA4AGQAYQBkADUAMQBkAGYAZQAAAD4A
DwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADAANwA3AC4AMgA1ADEANgA1
AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADQANwAyADMAZQA3ADgA
ZQA0ADkANQA4ADQAYgBhADUAOQBjAGIAMgA3ADIANwA4AGQAYQBkADUAMQBkAGYAZQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANAA3ADIA
MwBlADcAOABlADQAOQA1ADgANABiAGEANQA5AGMAYgAyADcAMgA3ADgAZABhAGQANQAxAGQAZgBl
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADQANwAyADMA
ZQA3ADgAZQA0ADkANQA4ADQAYgBhADUAOQBjAGIAMgA3ADIANwA4AGQAYQBkADUAMQBkAGYAZQAA
AEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAAwADcANwAuADIA
NQAxADYANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAAwADcANwAuADIANQAxADYANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAA8OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="149"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="146"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="268"
            Column="17" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="238"
            Column="13" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="172"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="208"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="136"
            Column="21" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="254"
            Column="17" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="131,42"
          Id="Package\Invoke API"
          TopLeft="295.5,31.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>